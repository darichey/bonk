/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// HealthIncident : A status health incident



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HealthIncident {
    /// The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.
    #[serde(rename = "start_date")]
    pub start_date: String,
    /// The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.
    #[serde(rename = "end_date", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<Option<String>>,
    /// The title of the incident
    #[serde(rename = "title")]
    pub title: String,
    /// Updates on the health incident.
    #[serde(rename = "incident_updates")]
    pub incident_updates: Vec<crate::models::IncidentUpdate>,
}

impl HealthIncident {
    /// A status health incident
    pub fn new(start_date: String, title: String, incident_updates: Vec<crate::models::IncidentUpdate>) -> HealthIncident {
        HealthIncident {
            start_date,
            end_date: None,
            title,
            incident_updates,
        }
    }
}


