/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WalletPaymentScheme : The payment scheme used to execute this transaction. This is present only for transaction types `PAYOUT` and `REFUND`.  `FASTER_PAYMENTS`: The standard payment scheme within the UK.  `SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.  `SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment to a beneficiary within the SEPA area.
/// The payment scheme used to execute this transaction. This is present only for transaction types `PAYOUT` and `REFUND`.  `FASTER_PAYMENTS`: The standard payment scheme within the UK.  `SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.  `SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment to a beneficiary within the SEPA area.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WalletPaymentScheme {
    #[serde(rename = "null")]
    Null,
    #[serde(rename = "FASTER_PAYMENTS")]
    FasterPayments,
    #[serde(rename = "SEPA_CREDIT_TRANSFER")]
    SepaCreditTransfer,
    #[serde(rename = "SEPA_CREDIT_TRANSFER_INSTANT")]
    SepaCreditTransferInstant,

}

impl std::fmt::Display for WalletPaymentScheme {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Null => write!(f, "null"),
            Self::FasterPayments => write!(f, "FASTER_PAYMENTS"),
            Self::SepaCreditTransfer => write!(f, "SEPA_CREDIT_TRANSFER"),
            Self::SepaCreditTransferInstant => write!(f, "SEPA_CREDIT_TRANSFER_INSTANT"),
        }
    }
}

impl Default for WalletPaymentScheme {
    fn default() -> WalletPaymentScheme {
        Self::Null
    }
}

