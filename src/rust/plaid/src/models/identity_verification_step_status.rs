/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IdentityVerificationStepStatus : The status of a step in the Identity Verification process.
/// The status of a step in the Identity Verification process.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IdentityVerificationStepStatus {
    #[serde(rename = "success")]
    Success,
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "waiting_for_prerequisite")]
    WaitingForPrerequisite,
    #[serde(rename = "not_applicable")]
    NotApplicable,
    #[serde(rename = "skipped")]
    Skipped,
    #[serde(rename = "expired")]
    Expired,
    #[serde(rename = "canceled")]
    Canceled,
    #[serde(rename = "pending_review")]
    PendingReview,
    #[serde(rename = "manually_approved")]
    ManuallyApproved,
    #[serde(rename = "manually_rejected")]
    ManuallyRejected,

}

impl std::fmt::Display for IdentityVerificationStepStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Success => write!(f, "success"),
            Self::Active => write!(f, "active"),
            Self::Failed => write!(f, "failed"),
            Self::WaitingForPrerequisite => write!(f, "waiting_for_prerequisite"),
            Self::NotApplicable => write!(f, "not_applicable"),
            Self::Skipped => write!(f, "skipped"),
            Self::Expired => write!(f, "expired"),
            Self::Canceled => write!(f, "canceled"),
            Self::PendingReview => write!(f, "pending_review"),
            Self::ManuallyApproved => write!(f, "manually_approved"),
            Self::ManuallyRejected => write!(f, "manually_rejected"),
        }
    }
}

impl Default for IdentityVerificationStepStatus {
    fn default() -> IdentityVerificationStepStatus {
        Self::Success
    }
}

