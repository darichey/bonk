/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FdxNotificationCategory : Category of Notification
/// Category of Notification
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FdxNotificationCategory {
    #[serde(rename = "SECURITY")]
    Security,
    #[serde(rename = "MAINTENANCE")]
    Maintenance,
    #[serde(rename = "FRAUD")]
    Fraud,
    #[serde(rename = "CONSENT")]
    Consent,
    #[serde(rename = "NEW_DATA")]
    NewData,

}

impl std::fmt::Display for FdxNotificationCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Security => write!(f, "SECURITY"),
            Self::Maintenance => write!(f, "MAINTENANCE"),
            Self::Fraud => write!(f, "FRAUD"),
            Self::Consent => write!(f, "CONSENT"),
            Self::NewData => write!(f, "NEW_DATA"),
        }
    }
}

impl Default for FdxNotificationCategory {
    fn default() -> FdxNotificationCategory {
        Self::Security
    }
}

