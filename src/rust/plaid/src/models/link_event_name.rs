/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LinkEventName : A string representing the event that has just occurred in the Link flow.
/// A string representing the event that has just occurred in the Link flow.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LinkEventName {
    #[serde(rename = "BANK_INCOME_INSIGHTS_COMPLETED")]
    BankIncomeInsightsCompleted,
    #[serde(rename = "CLOSE_OAUTH")]
    CloseOauth,
    #[serde(rename = "ERROR")]
    Error,
    #[serde(rename = "EXIT")]
    Exit,
    #[serde(rename = "FAIL_OAUTH")]
    FailOauth,
    #[serde(rename = "HANDOFF")]
    Handoff,
    #[serde(rename = "ISSUE_FOLLOWED")]
    IssueFollowed,
    #[serde(rename = "OPEN")]
    Open,
    #[serde(rename = "OPEN_MY_PLAID")]
    OpenMyPlaid,
    #[serde(rename = "OPEN_OAUTH")]
    OpenOauth,
    #[serde(rename = "SEARCH_INSTITUTION")]
    SearchInstitution,
    #[serde(rename = "SELECT_AUTH_TYPE")]
    SelectAuthType,
    #[serde(rename = "SELECT_BRAND")]
    SelectBrand,
    #[serde(rename = "SELECT_DEGRADED_INSTITUTION")]
    SelectDegradedInstitution,
    #[serde(rename = "SELECT_DOWN_INSTITUTION")]
    SelectDownInstitution,
    #[serde(rename = "SELECT_FILTERED_INSTITUTION")]
    SelectFilteredInstitution,
    #[serde(rename = "SELECT_INSTITUTION")]
    SelectInstitution,
    #[serde(rename = "SUBMIT_ACCOUNT_NUMBER")]
    SubmitAccountNumber,
    #[serde(rename = "SUBMIT_CREDENTIALS")]
    SubmitCredentials,
    #[serde(rename = "SUBMIT_DOCUMENTS")]
    SubmitDocuments,
    #[serde(rename = "SUBMIT_DOCUMENTS_ERROR")]
    SubmitDocumentsError,
    #[serde(rename = "SUBMIT_DOCUMENTS_SUCCESS")]
    SubmitDocumentsSuccess,
    #[serde(rename = "SUBMIT_MFA")]
    SubmitMfa,
    #[serde(rename = "SUBMIT_ROUTING_NUMBER")]
    SubmitRoutingNumber,
    #[serde(rename = "TRANSITION_VIEW")]
    TransitionView,
    #[serde(rename = "VIEW_DATA_TYPES")]
    ViewDataTypes,

}

impl std::fmt::Display for LinkEventName {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::BankIncomeInsightsCompleted => write!(f, "BANK_INCOME_INSIGHTS_COMPLETED"),
            Self::CloseOauth => write!(f, "CLOSE_OAUTH"),
            Self::Error => write!(f, "ERROR"),
            Self::Exit => write!(f, "EXIT"),
            Self::FailOauth => write!(f, "FAIL_OAUTH"),
            Self::Handoff => write!(f, "HANDOFF"),
            Self::IssueFollowed => write!(f, "ISSUE_FOLLOWED"),
            Self::Open => write!(f, "OPEN"),
            Self::OpenMyPlaid => write!(f, "OPEN_MY_PLAID"),
            Self::OpenOauth => write!(f, "OPEN_OAUTH"),
            Self::SearchInstitution => write!(f, "SEARCH_INSTITUTION"),
            Self::SelectAuthType => write!(f, "SELECT_AUTH_TYPE"),
            Self::SelectBrand => write!(f, "SELECT_BRAND"),
            Self::SelectDegradedInstitution => write!(f, "SELECT_DEGRADED_INSTITUTION"),
            Self::SelectDownInstitution => write!(f, "SELECT_DOWN_INSTITUTION"),
            Self::SelectFilteredInstitution => write!(f, "SELECT_FILTERED_INSTITUTION"),
            Self::SelectInstitution => write!(f, "SELECT_INSTITUTION"),
            Self::SubmitAccountNumber => write!(f, "SUBMIT_ACCOUNT_NUMBER"),
            Self::SubmitCredentials => write!(f, "SUBMIT_CREDENTIALS"),
            Self::SubmitDocuments => write!(f, "SUBMIT_DOCUMENTS"),
            Self::SubmitDocumentsError => write!(f, "SUBMIT_DOCUMENTS_ERROR"),
            Self::SubmitDocumentsSuccess => write!(f, "SUBMIT_DOCUMENTS_SUCCESS"),
            Self::SubmitMfa => write!(f, "SUBMIT_MFA"),
            Self::SubmitRoutingNumber => write!(f, "SUBMIT_ROUTING_NUMBER"),
            Self::TransitionView => write!(f, "TRANSITION_VIEW"),
            Self::ViewDataTypes => write!(f, "VIEW_DATA_TYPES"),
        }
    }
}

impl Default for LinkEventName {
    fn default() -> LinkEventName {
        Self::BankIncomeInsightsCompleted
    }
}

