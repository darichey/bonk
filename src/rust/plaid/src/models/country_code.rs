/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CountryCode : ISO-3166-1 alpha-2 country code standard.

/// ISO-3166-1 alpha-2 country code standard.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CountryCode {
    #[serde(rename = "US")]
    Us,
    #[serde(rename = "GB")]
    Gb,
    #[serde(rename = "ES")]
    Es,
    #[serde(rename = "NL")]
    Nl,
    #[serde(rename = "FR")]
    Fr,
    #[serde(rename = "IE")]
    Ie,
    #[serde(rename = "CA")]
    Ca,
    #[serde(rename = "DE")]
    De,
    #[serde(rename = "IT")]
    It,
    #[serde(rename = "PL")]
    Pl,
    #[serde(rename = "DK")]
    Dk,
    #[serde(rename = "NO")]
    No,
    #[serde(rename = "SE")]
    Se,
    #[serde(rename = "EE")]
    Ee,
    #[serde(rename = "LT")]
    Lt,
    #[serde(rename = "LV")]
    Lv,
    #[serde(rename = "PT")]
    Pt,
    #[serde(rename = "BE")]
    Be,

}

impl ToString for CountryCode {
    fn to_string(&self) -> String {
        match self {
            Self::Us => String::from("US"),
            Self::Gb => String::from("GB"),
            Self::Es => String::from("ES"),
            Self::Nl => String::from("NL"),
            Self::Fr => String::from("FR"),
            Self::Ie => String::from("IE"),
            Self::Ca => String::from("CA"),
            Self::De => String::from("DE"),
            Self::It => String::from("IT"),
            Self::Pl => String::from("PL"),
            Self::Dk => String::from("DK"),
            Self::No => String::from("NO"),
            Self::Se => String::from("SE"),
            Self::Ee => String::from("EE"),
            Self::Lt => String::from("LT"),
            Self::Lv => String::from("LV"),
            Self::Pt => String::from("PT"),
            Self::Be => String::from("BE"),
        }
    }
}

impl Default for CountryCode {
    fn default() -> CountryCode {
        Self::Us
    }
}




