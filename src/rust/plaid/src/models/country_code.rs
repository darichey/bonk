/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CountryCode : ISO-3166-1 alpha-2 country code standard.
/// ISO-3166-1 alpha-2 country code standard.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CountryCode {
    #[serde(rename = "US")]
    Us,
    #[serde(rename = "GB")]
    Gb,
    #[serde(rename = "ES")]
    Es,
    #[serde(rename = "NL")]
    Nl,
    #[serde(rename = "FR")]
    Fr,
    #[serde(rename = "IE")]
    Ie,
    #[serde(rename = "CA")]
    Ca,
    #[serde(rename = "DE")]
    De,
    #[serde(rename = "IT")]
    It,
    #[serde(rename = "PL")]
    Pl,
    #[serde(rename = "DK")]
    Dk,
    #[serde(rename = "NO")]
    No,
    #[serde(rename = "SE")]
    Se,
    #[serde(rename = "EE")]
    Ee,
    #[serde(rename = "LT")]
    Lt,
    #[serde(rename = "LV")]
    Lv,
    #[serde(rename = "PT")]
    Pt,
    #[serde(rename = "BE")]
    Be,

}

impl std::fmt::Display for CountryCode {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Us => write!(f, "US"),
            Self::Gb => write!(f, "GB"),
            Self::Es => write!(f, "ES"),
            Self::Nl => write!(f, "NL"),
            Self::Fr => write!(f, "FR"),
            Self::Ie => write!(f, "IE"),
            Self::Ca => write!(f, "CA"),
            Self::De => write!(f, "DE"),
            Self::It => write!(f, "IT"),
            Self::Pl => write!(f, "PL"),
            Self::Dk => write!(f, "DK"),
            Self::No => write!(f, "NO"),
            Self::Se => write!(f, "SE"),
            Self::Ee => write!(f, "EE"),
            Self::Lt => write!(f, "LT"),
            Self::Lv => write!(f, "LV"),
            Self::Pt => write!(f, "PT"),
            Self::Be => write!(f, "BE"),
        }
    }
}

impl Default for CountryCode {
    fn default() -> CountryCode {
        Self::Us
    }
}

