/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// FinancialInstitutionInsights : Insights surrounding external financial institution counterparties associated with a user.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FinancialInstitutionInsights {
    /// Name of the financial institution counterparty.
    #[serde(rename = "name")]
    pub name: String,
    /// A unique, stable, Plaid-generated id that maps to the counterparty.
    #[serde(rename = "entity_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub entity_id: Option<Option<String>>,
    /// The website associated with the counterparty.
    #[serde(rename = "website", deserialize_with = "Option::deserialize")]
    pub website: Option<String>,
    /// Associated accounts, detected based on the nature of transfers to/from this institution.
    #[serde(rename = "detected_accounts")]
    pub detected_accounts: Vec<crate::models::DetectedAccount>,
}

impl FinancialInstitutionInsights {
    /// Insights surrounding external financial institution counterparties associated with a user.
    pub fn new(name: String, website: Option<String>, detected_accounts: Vec<crate::models::DetectedAccount>) -> FinancialInstitutionInsights {
        FinancialInstitutionInsights {
            name,
            entity_id: None,
            website,
            detected_accounts,
        }
    }
}


