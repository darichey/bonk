/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FdxNotificationSeverity : Severity level of notification
/// Severity level of notification
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FdxNotificationSeverity {
    #[serde(rename = "EMERGENCY")]
    Emergency,
    #[serde(rename = "ALERT")]
    Alert,
    #[serde(rename = "WARNING")]
    Warning,
    #[serde(rename = "NOTICE")]
    Notice,
    #[serde(rename = "INFO")]
    Info,

}

impl std::fmt::Display for FdxNotificationSeverity {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Emergency => write!(f, "EMERGENCY"),
            Self::Alert => write!(f, "ALERT"),
            Self::Warning => write!(f, "WARNING"),
            Self::Notice => write!(f, "NOTICE"),
            Self::Info => write!(f, "INFO"),
        }
    }
}

impl Default for FdxNotificationSeverity {
    fn default() -> FdxNotificationSeverity {
        Self::Emergency
    }
}

