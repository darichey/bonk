/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AccountSubtype : See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.

/// See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccountSubtype {
    #[serde(rename = "401a")]
    Variant401a,
    #[serde(rename = "401k")]
    Variant401k,
    #[serde(rename = "403B")]
    Variant403B,
    #[serde(rename = "457b")]
    Variant457b,
    #[serde(rename = "529")]
    Variant529,
    #[serde(rename = "brokerage")]
    Brokerage,
    #[serde(rename = "cash isa")]
    CashIsa,
    #[serde(rename = "crypto exchange")]
    CryptoExchange,
    #[serde(rename = "education savings account")]
    EducationSavingsAccount,
    #[serde(rename = "ebt")]
    Ebt,
    #[serde(rename = "fixed annuity")]
    FixedAnnuity,
    #[serde(rename = "gic")]
    Gic,
    #[serde(rename = "health reimbursement arrangement")]
    HealthReimbursementArrangement,
    #[serde(rename = "hsa")]
    Hsa,
    #[serde(rename = "isa")]
    Isa,
    #[serde(rename = "ira")]
    Ira,
    #[serde(rename = "lif")]
    Lif,
    #[serde(rename = "life insurance")]
    LifeInsurance,
    #[serde(rename = "lira")]
    Lira,
    #[serde(rename = "lrif")]
    Lrif,
    #[serde(rename = "lrsp")]
    Lrsp,
    #[serde(rename = "non-custodial wallet")]
    NonCustodialWallet,
    #[serde(rename = "non-taxable brokerage account")]
    NonTaxableBrokerageAccount,
    #[serde(rename = "other")]
    Other,
    #[serde(rename = "other insurance")]
    OtherInsurance,
    #[serde(rename = "other annuity")]
    OtherAnnuity,
    #[serde(rename = "prif")]
    Prif,
    #[serde(rename = "rdsp")]
    Rdsp,
    #[serde(rename = "resp")]
    Resp,
    #[serde(rename = "rlif")]
    Rlif,
    #[serde(rename = "rrif")]
    Rrif,
    #[serde(rename = "pension")]
    Pension,
    #[serde(rename = "profit sharing plan")]
    ProfitSharingPlan,
    #[serde(rename = "retirement")]
    Retirement,
    #[serde(rename = "roth")]
    Roth,
    #[serde(rename = "roth 401k")]
    Roth401k,
    #[serde(rename = "rrsp")]
    Rrsp,
    #[serde(rename = "sep ira")]
    SepIra,
    #[serde(rename = "simple ira")]
    SimpleIra,
    #[serde(rename = "sipp")]
    Sipp,
    #[serde(rename = "stock plan")]
    StockPlan,
    #[serde(rename = "thrift savings plan")]
    ThriftSavingsPlan,
    #[serde(rename = "tfsa")]
    Tfsa,
    #[serde(rename = "trust")]
    Trust,
    #[serde(rename = "ugma")]
    Ugma,
    #[serde(rename = "utma")]
    Utma,
    #[serde(rename = "variable annuity")]
    VariableAnnuity,
    #[serde(rename = "credit card")]
    CreditCard,
    #[serde(rename = "paypal")]
    Paypal,
    #[serde(rename = "cd")]
    Cd,
    #[serde(rename = "checking")]
    Checking,
    #[serde(rename = "savings")]
    Savings,
    #[serde(rename = "money market")]
    MoneyMarket,
    #[serde(rename = "prepaid")]
    Prepaid,
    #[serde(rename = "auto")]
    Auto,
    #[serde(rename = "business")]
    Business,
    #[serde(rename = "commercial")]
    Commercial,
    #[serde(rename = "construction")]
    Construction,
    #[serde(rename = "consumer")]
    Consumer,
    #[serde(rename = "home equity")]
    HomeEquity,
    #[serde(rename = "loan")]
    Loan,
    #[serde(rename = "mortgage")]
    Mortgage,
    #[serde(rename = "overdraft")]
    Overdraft,
    #[serde(rename = "line of credit")]
    LineOfCredit,
    #[serde(rename = "student")]
    Student,
    #[serde(rename = "cash management")]
    CashManagement,
    #[serde(rename = "keogh")]
    Keogh,
    #[serde(rename = "mutual fund")]
    MutualFund,
    #[serde(rename = "recurring")]
    Recurring,
    #[serde(rename = "rewards")]
    Rewards,
    #[serde(rename = "safe deposit")]
    SafeDeposit,
    #[serde(rename = "sarsep")]
    Sarsep,
    #[serde(rename = "payroll")]
    Payroll,
    #[serde(rename = "null")]
    Null,

}

impl ToString for AccountSubtype {
    fn to_string(&self) -> String {
        match self {
            Self::Variant401a => String::from("401a"),
            Self::Variant401k => String::from("401k"),
            Self::Variant403B => String::from("403B"),
            Self::Variant457b => String::from("457b"),
            Self::Variant529 => String::from("529"),
            Self::Brokerage => String::from("brokerage"),
            Self::CashIsa => String::from("cash isa"),
            Self::CryptoExchange => String::from("crypto exchange"),
            Self::EducationSavingsAccount => String::from("education savings account"),
            Self::Ebt => String::from("ebt"),
            Self::FixedAnnuity => String::from("fixed annuity"),
            Self::Gic => String::from("gic"),
            Self::HealthReimbursementArrangement => String::from("health reimbursement arrangement"),
            Self::Hsa => String::from("hsa"),
            Self::Isa => String::from("isa"),
            Self::Ira => String::from("ira"),
            Self::Lif => String::from("lif"),
            Self::LifeInsurance => String::from("life insurance"),
            Self::Lira => String::from("lira"),
            Self::Lrif => String::from("lrif"),
            Self::Lrsp => String::from("lrsp"),
            Self::NonCustodialWallet => String::from("non-custodial wallet"),
            Self::NonTaxableBrokerageAccount => String::from("non-taxable brokerage account"),
            Self::Other => String::from("other"),
            Self::OtherInsurance => String::from("other insurance"),
            Self::OtherAnnuity => String::from("other annuity"),
            Self::Prif => String::from("prif"),
            Self::Rdsp => String::from("rdsp"),
            Self::Resp => String::from("resp"),
            Self::Rlif => String::from("rlif"),
            Self::Rrif => String::from("rrif"),
            Self::Pension => String::from("pension"),
            Self::ProfitSharingPlan => String::from("profit sharing plan"),
            Self::Retirement => String::from("retirement"),
            Self::Roth => String::from("roth"),
            Self::Roth401k => String::from("roth 401k"),
            Self::Rrsp => String::from("rrsp"),
            Self::SepIra => String::from("sep ira"),
            Self::SimpleIra => String::from("simple ira"),
            Self::Sipp => String::from("sipp"),
            Self::StockPlan => String::from("stock plan"),
            Self::ThriftSavingsPlan => String::from("thrift savings plan"),
            Self::Tfsa => String::from("tfsa"),
            Self::Trust => String::from("trust"),
            Self::Ugma => String::from("ugma"),
            Self::Utma => String::from("utma"),
            Self::VariableAnnuity => String::from("variable annuity"),
            Self::CreditCard => String::from("credit card"),
            Self::Paypal => String::from("paypal"),
            Self::Cd => String::from("cd"),
            Self::Checking => String::from("checking"),
            Self::Savings => String::from("savings"),
            Self::MoneyMarket => String::from("money market"),
            Self::Prepaid => String::from("prepaid"),
            Self::Auto => String::from("auto"),
            Self::Business => String::from("business"),
            Self::Commercial => String::from("commercial"),
            Self::Construction => String::from("construction"),
            Self::Consumer => String::from("consumer"),
            Self::HomeEquity => String::from("home equity"),
            Self::Loan => String::from("loan"),
            Self::Mortgage => String::from("mortgage"),
            Self::Overdraft => String::from("overdraft"),
            Self::LineOfCredit => String::from("line of credit"),
            Self::Student => String::from("student"),
            Self::CashManagement => String::from("cash management"),
            Self::Keogh => String::from("keogh"),
            Self::MutualFund => String::from("mutual fund"),
            Self::Recurring => String::from("recurring"),
            Self::Rewards => String::from("rewards"),
            Self::SafeDeposit => String::from("safe deposit"),
            Self::Sarsep => String::from("sarsep"),
            Self::Payroll => String::from("payroll"),
            Self::Null => String::from("null"),
        }
    }
}

impl Default for AccountSubtype {
    fn default() -> AccountSubtype {
        Self::Variant401a
    }
}




