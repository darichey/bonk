/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AccountSubtype : See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
/// See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccountSubtype {
    #[serde(rename = "401a")]
    Variant401a,
    #[serde(rename = "401k")]
    Variant401k,
    #[serde(rename = "403B")]
    Variant403B,
    #[serde(rename = "457b")]
    Variant457b,
    #[serde(rename = "529")]
    Variant529,
    #[serde(rename = "auto")]
    Auto,
    #[serde(rename = "brokerage")]
    Brokerage,
    #[serde(rename = "business")]
    Business,
    #[serde(rename = "cash isa")]
    CashIsa,
    #[serde(rename = "cash management")]
    CashManagement,
    #[serde(rename = "cd")]
    Cd,
    #[serde(rename = "checking")]
    Checking,
    #[serde(rename = "commercial")]
    Commercial,
    #[serde(rename = "construction")]
    Construction,
    #[serde(rename = "consumer")]
    Consumer,
    #[serde(rename = "credit card")]
    CreditCard,
    #[serde(rename = "crypto exchange")]
    CryptoExchange,
    #[serde(rename = "ebt")]
    Ebt,
    #[serde(rename = "education savings account")]
    EducationSavingsAccount,
    #[serde(rename = "fixed annuity")]
    FixedAnnuity,
    #[serde(rename = "gic")]
    Gic,
    #[serde(rename = "health reimbursement arrangement")]
    HealthReimbursementArrangement,
    #[serde(rename = "home equity")]
    HomeEquity,
    #[serde(rename = "hsa")]
    Hsa,
    #[serde(rename = "isa")]
    Isa,
    #[serde(rename = "ira")]
    Ira,
    #[serde(rename = "keogh")]
    Keogh,
    #[serde(rename = "lif")]
    Lif,
    #[serde(rename = "life insurance")]
    LifeInsurance,
    #[serde(rename = "line of credit")]
    LineOfCredit,
    #[serde(rename = "lira")]
    Lira,
    #[serde(rename = "loan")]
    Loan,
    #[serde(rename = "lrif")]
    Lrif,
    #[serde(rename = "lrsp")]
    Lrsp,
    #[serde(rename = "money market")]
    MoneyMarket,
    #[serde(rename = "mortgage")]
    Mortgage,
    #[serde(rename = "mutual fund")]
    MutualFund,
    #[serde(rename = "non-custodial wallet")]
    NonCustodialWallet,
    #[serde(rename = "non-taxable brokerage account")]
    NonTaxableBrokerageAccount,
    #[serde(rename = "other")]
    Other,
    #[serde(rename = "other insurance")]
    OtherInsurance,
    #[serde(rename = "other annuity")]
    OtherAnnuity,
    #[serde(rename = "overdraft")]
    Overdraft,
    #[serde(rename = "paypal")]
    Paypal,
    #[serde(rename = "payroll")]
    Payroll,
    #[serde(rename = "pension")]
    Pension,
    #[serde(rename = "prepaid")]
    Prepaid,
    #[serde(rename = "prif")]
    Prif,
    #[serde(rename = "profit sharing plan")]
    ProfitSharingPlan,
    #[serde(rename = "rdsp")]
    Rdsp,
    #[serde(rename = "resp")]
    Resp,
    #[serde(rename = "retirement")]
    Retirement,
    #[serde(rename = "rlif")]
    Rlif,
    #[serde(rename = "roth")]
    Roth,
    #[serde(rename = "roth 401k")]
    Roth401k,
    #[serde(rename = "rrif")]
    Rrif,
    #[serde(rename = "rrsp")]
    Rrsp,
    #[serde(rename = "sarsep")]
    Sarsep,
    #[serde(rename = "savings")]
    Savings,
    #[serde(rename = "sep ira")]
    SepIra,
    #[serde(rename = "simple ira")]
    SimpleIra,
    #[serde(rename = "sipp")]
    Sipp,
    #[serde(rename = "stock plan")]
    StockPlan,
    #[serde(rename = "student")]
    Student,
    #[serde(rename = "thrift savings plan")]
    ThriftSavingsPlan,
    #[serde(rename = "tfsa")]
    Tfsa,
    #[serde(rename = "trust")]
    Trust,
    #[serde(rename = "ugma")]
    Ugma,
    #[serde(rename = "utma")]
    Utma,
    #[serde(rename = "variable annuity")]
    VariableAnnuity,

}

impl std::fmt::Display for AccountSubtype {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Variant401a => write!(f, "401a"),
            Self::Variant401k => write!(f, "401k"),
            Self::Variant403B => write!(f, "403B"),
            Self::Variant457b => write!(f, "457b"),
            Self::Variant529 => write!(f, "529"),
            Self::Auto => write!(f, "auto"),
            Self::Brokerage => write!(f, "brokerage"),
            Self::Business => write!(f, "business"),
            Self::CashIsa => write!(f, "cash isa"),
            Self::CashManagement => write!(f, "cash management"),
            Self::Cd => write!(f, "cd"),
            Self::Checking => write!(f, "checking"),
            Self::Commercial => write!(f, "commercial"),
            Self::Construction => write!(f, "construction"),
            Self::Consumer => write!(f, "consumer"),
            Self::CreditCard => write!(f, "credit card"),
            Self::CryptoExchange => write!(f, "crypto exchange"),
            Self::Ebt => write!(f, "ebt"),
            Self::EducationSavingsAccount => write!(f, "education savings account"),
            Self::FixedAnnuity => write!(f, "fixed annuity"),
            Self::Gic => write!(f, "gic"),
            Self::HealthReimbursementArrangement => write!(f, "health reimbursement arrangement"),
            Self::HomeEquity => write!(f, "home equity"),
            Self::Hsa => write!(f, "hsa"),
            Self::Isa => write!(f, "isa"),
            Self::Ira => write!(f, "ira"),
            Self::Keogh => write!(f, "keogh"),
            Self::Lif => write!(f, "lif"),
            Self::LifeInsurance => write!(f, "life insurance"),
            Self::LineOfCredit => write!(f, "line of credit"),
            Self::Lira => write!(f, "lira"),
            Self::Loan => write!(f, "loan"),
            Self::Lrif => write!(f, "lrif"),
            Self::Lrsp => write!(f, "lrsp"),
            Self::MoneyMarket => write!(f, "money market"),
            Self::Mortgage => write!(f, "mortgage"),
            Self::MutualFund => write!(f, "mutual fund"),
            Self::NonCustodialWallet => write!(f, "non-custodial wallet"),
            Self::NonTaxableBrokerageAccount => write!(f, "non-taxable brokerage account"),
            Self::Other => write!(f, "other"),
            Self::OtherInsurance => write!(f, "other insurance"),
            Self::OtherAnnuity => write!(f, "other annuity"),
            Self::Overdraft => write!(f, "overdraft"),
            Self::Paypal => write!(f, "paypal"),
            Self::Payroll => write!(f, "payroll"),
            Self::Pension => write!(f, "pension"),
            Self::Prepaid => write!(f, "prepaid"),
            Self::Prif => write!(f, "prif"),
            Self::ProfitSharingPlan => write!(f, "profit sharing plan"),
            Self::Rdsp => write!(f, "rdsp"),
            Self::Resp => write!(f, "resp"),
            Self::Retirement => write!(f, "retirement"),
            Self::Rlif => write!(f, "rlif"),
            Self::Roth => write!(f, "roth"),
            Self::Roth401k => write!(f, "roth 401k"),
            Self::Rrif => write!(f, "rrif"),
            Self::Rrsp => write!(f, "rrsp"),
            Self::Sarsep => write!(f, "sarsep"),
            Self::Savings => write!(f, "savings"),
            Self::SepIra => write!(f, "sep ira"),
            Self::SimpleIra => write!(f, "simple ira"),
            Self::Sipp => write!(f, "sipp"),
            Self::StockPlan => write!(f, "stock plan"),
            Self::Student => write!(f, "student"),
            Self::ThriftSavingsPlan => write!(f, "thrift savings plan"),
            Self::Tfsa => write!(f, "tfsa"),
            Self::Trust => write!(f, "trust"),
            Self::Ugma => write!(f, "ugma"),
            Self::Utma => write!(f, "utma"),
            Self::VariableAnnuity => write!(f, "variable annuity"),
        }
    }
}

impl Default for AccountSubtype {
    fn default() -> AccountSubtype {
        Self::Variant401a
    }
}

