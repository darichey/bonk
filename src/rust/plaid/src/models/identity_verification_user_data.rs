/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IdentityVerificationUserData : The identity data that was either collected from the user or provided via API in order to perform an identity verification.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IdentityVerificationUserData {
    /// A phone number in E.164 format.
    #[serde(rename = "phone_number", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<Option<String>>,
    /// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
    #[serde(rename = "date_of_birth", deserialize_with = "Option::deserialize")]
    pub date_of_birth: Option<String>,
    /// An IPv4 or IPV6 address.
    #[serde(rename = "ip_address", deserialize_with = "Option::deserialize")]
    pub ip_address: Option<String>,
    /// A valid email address.
    #[serde(rename = "email_address", deserialize_with = "Option::deserialize")]
    pub email_address: Option<String>,
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<crate::models::IdentityVerificationResponseUserName>,
    #[serde(rename = "address", deserialize_with = "Option::deserialize")]
    pub address: Option<crate::models::IdentityVerificationUserAddress>,
    #[serde(rename = "id_number", deserialize_with = "Option::deserialize")]
    pub id_number: Option<crate::models::UserIdNumber>,
}

impl IdentityVerificationUserData {
    /// The identity data that was either collected from the user or provided via API in order to perform an identity verification.
    pub fn new(date_of_birth: Option<String>, ip_address: Option<String>, email_address: Option<String>, name: Option<crate::models::IdentityVerificationResponseUserName>, address: Option<crate::models::IdentityVerificationUserAddress>, id_number: Option<crate::models::UserIdNumber>) -> IdentityVerificationUserData {
        IdentityVerificationUserData {
            phone_number: None,
            date_of_birth,
            ip_address,
            email_address,
            name,
            address,
            id_number,
        }
    }
}


