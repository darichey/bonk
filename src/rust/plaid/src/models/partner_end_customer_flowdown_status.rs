/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PartnerEndCustomerFlowdownStatus : The status of the addendum to the Plaid MSA (\"flowdown\") for the end customer.
/// The status of the addendum to the Plaid MSA (\"flowdown\") for the end customer.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PartnerEndCustomerFlowdownStatus {
    #[serde(rename = "NOT_STARTED")]
    NotStarted,
    #[serde(rename = "IN_REVIEW")]
    InReview,
    #[serde(rename = "NEGOTIATION")]
    Negotiation,
    #[serde(rename = "COMPLETE")]
    Complete,

}

impl std::fmt::Display for PartnerEndCustomerFlowdownStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::NotStarted => write!(f, "NOT_STARTED"),
            Self::InReview => write!(f, "IN_REVIEW"),
            Self::Negotiation => write!(f, "NEGOTIATION"),
            Self::Complete => write!(f, "COMPLETE"),
        }
    }
}

impl Default for PartnerEndCustomerFlowdownStatus {
    fn default() -> PartnerEndCustomerFlowdownStatus {
        Self::NotStarted
    }
}

