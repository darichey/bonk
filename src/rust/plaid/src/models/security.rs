/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Security : Contains details about a security
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Security {
    /// A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
    #[serde(rename = "security_id")]
    pub security_id: String,
    /// 12-character ISIN, a globally unique securities identifier. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).
    #[serde(rename = "isin", deserialize_with = "Option::deserialize")]
    pub isin: Option<String>,
    /// 9-character CUSIP, an identifier assigned to North American securities. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).
    #[serde(rename = "cusip", deserialize_with = "Option::deserialize")]
    pub cusip: Option<String>,
    /// 7-character SEDOL, an identifier assigned to securities in the UK.
    #[serde(rename = "sedol", deserialize_with = "Option::deserialize")]
    pub sedol: Option<String>,
    /// An identifier given to the security by the institution
    #[serde(rename = "institution_security_id", deserialize_with = "Option::deserialize")]
    pub institution_security_id: Option<String>,
    /// If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.
    #[serde(rename = "institution_id", deserialize_with = "Option::deserialize")]
    pub institution_id: Option<String>,
    /// In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.
    #[serde(rename = "proxy_security_id", deserialize_with = "Option::deserialize")]
    pub proxy_security_id: Option<String>,
    /// A descriptive name for the security, suitable for display.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<String>,
    /// The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available.
    #[serde(rename = "ticker_symbol", deserialize_with = "Option::deserialize")]
    pub ticker_symbol: Option<String>,
    /// Indicates that a security is a highly liquid asset and can be treated like cash.
    #[serde(rename = "is_cash_equivalent", deserialize_with = "Option::deserialize")]
    pub is_cash_equivalent: Option<bool>,
    /// The security type of the holding.  In rare instances, a null value is returned when institutional data is insufficient to determine the security type.  Valid security types are:  `cash`: Cash, currency, and money market funds  `cryptocurrency`: Digital or virtual currencies  `derivative`: Options, warrants, and other derivative instruments  `equity`: Domestic and foreign equities  `etf`: Multi-asset exchange-traded investment funds  `fixed income`: Bonds and certificates of deposit (CDs)  `loan`: Loans and loan receivables  `mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors  `other`: Unknown or other investment types
    #[serde(rename = "type", deserialize_with = "Option::deserialize")]
    pub r#type: Option<String>,
    /// Price of the security at the close of the previous trading session. Null for non-public securities.  If the security is a foreign currency this field will be updated daily and will be priced in USD.  If the security is a cryptocurrency, this field will be updated multiple times a day. As crypto prices can fluctuate quickly and data may become stale sooner than other asset classes, refer to `update_datetime` with the time when the price was last updated. 
    #[serde(rename = "close_price", deserialize_with = "Option::deserialize")]
    pub close_price: Option<f64>,
    /// Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.
    #[serde(rename = "close_price_as_of", deserialize_with = "Option::deserialize")]
    pub close_price_as_of: Option<String>,
    /// Date and time at which `close_price` is accurate, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ). Always `null` if `close_price` is `null`.
    #[serde(rename = "update_datetime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_datetime: Option<Option<String>>,
    /// The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.
    #[serde(rename = "iso_currency_code", deserialize_with = "Option::deserialize")]
    pub iso_currency_code: Option<String>,
    /// The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
    #[serde(rename = "unofficial_currency_code", deserialize_with = "Option::deserialize")]
    pub unofficial_currency_code: Option<String>,
    /// The ISO-10383 Market Identifier Code of the exchange or market in which the security is being traded.
    #[serde(rename = "market_identifier_code", deserialize_with = "Option::deserialize")]
    pub market_identifier_code: Option<String>,
    /// The sector classification of the security, such as Finance, Health Technology, etc.  For a complete list of possible values, please refer to the [\"Sectors and Industries\" spreadsheet](https://docs.google.com/spreadsheets/d/1L7aXUdqLhxgM8qe7hK67qqKXiUdQqILpwZ0LpxvCVnc).
    #[serde(rename = "sector", deserialize_with = "Option::deserialize")]
    pub sector: Option<String>,
    /// The industry classification of the security, such as Biotechnology, Airlines, etc.  For a complete list of possible values, please refer to the [\"Sectors and Industries\" spreadsheet](https://docs.google.com/spreadsheets/d/1L7aXUdqLhxgM8qe7hK67qqKXiUdQqILpwZ0LpxvCVnc).
    #[serde(rename = "industry", deserialize_with = "Option::deserialize")]
    pub industry: Option<String>,
    #[serde(rename = "option_contract", deserialize_with = "Option::deserialize")]
    pub option_contract: Option<models::OptionContract>,
}

impl Security {
    /// Contains details about a security
    pub fn new(security_id: String, isin: Option<String>, cusip: Option<String>, sedol: Option<String>, institution_security_id: Option<String>, institution_id: Option<String>, proxy_security_id: Option<String>, name: Option<String>, ticker_symbol: Option<String>, is_cash_equivalent: Option<bool>, r#type: Option<String>, close_price: Option<f64>, close_price_as_of: Option<String>, iso_currency_code: Option<String>, unofficial_currency_code: Option<String>, market_identifier_code: Option<String>, sector: Option<String>, industry: Option<String>, option_contract: Option<models::OptionContract>) -> Security {
        Security {
            security_id,
            isin,
            cusip,
            sedol,
            institution_security_id,
            institution_id,
            proxy_security_id,
            name,
            ticker_symbol,
            is_cash_equivalent,
            r#type,
            close_price,
            close_price_as_of,
            update_datetime: None,
            iso_currency_code,
            unofficial_currency_code,
            market_identifier_code,
            sector,
            industry,
            option_contract,
        }
    }
}

