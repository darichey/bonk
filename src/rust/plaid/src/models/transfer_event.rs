/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TransferEvent : Represents an event in the Transfers API.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferEvent {
    /// Plaid’s unique identifier for this event. IDs are sequential unsigned 64-bit integers.
    #[serde(rename = "event_id")]
    pub event_id: i32,
    /// The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    #[serde(rename = "event_type")]
    pub event_type: models::TransferEventType,
    /// The account ID associated with the transfer. This field is omitted for Plaid Ledger Sweep events.
    #[serde(rename = "account_id", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    /// The id of the associated funding account, available in the Plaid Dashboard. If present, this indicates which of your business checking accounts will be credited or debited.
    #[serde(rename = "funding_account_id", deserialize_with = "Option::deserialize")]
    pub funding_account_id: Option<String>,
    /// Plaid’s unique identifier for a Plaid Ledger Balance.
    #[serde(rename = "ledger_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ledger_id: Option<Option<String>>,
    /// Plaid’s unique identifier for a transfer. This field is `null` for Plaid Ledger Sweep events.
    #[serde(rename = "transfer_id")]
    pub transfer_id: String,
    /// The ID of the origination account that this balance belongs to.
    #[serde(rename = "origination_account_id", deserialize_with = "Option::deserialize")]
    pub origination_account_id: Option<String>,
    #[serde(rename = "transfer_type", skip_serializing_if = "Option::is_none")]
    pub transfer_type: Option<models::OmittableTransferType>,
    /// The amount of the transfer (decimal string with two digits of precision e.g. \"10.00\"). This field is omitted for Plaid Ledger Sweep events.
    #[serde(rename = "transfer_amount", skip_serializing_if = "Option::is_none")]
    pub transfer_amount: Option<String>,
    #[serde(rename = "failure_reason", deserialize_with = "Option::deserialize")]
    pub failure_reason: Option<models::TransferFailure>,
    /// Plaid’s unique identifier for a sweep.
    #[serde(rename = "sweep_id", deserialize_with = "Option::deserialize")]
    pub sweep_id: Option<String>,
    /// A signed amount of how much was `swept` or `return_swept` for this transfer (decimal string with two digits of precision e.g. \"-5.50\").
    #[serde(rename = "sweep_amount", deserialize_with = "Option::deserialize")]
    pub sweep_amount: Option<String>,
    /// Plaid’s unique identifier for a refund. A non-null value indicates the event is for the associated refund of the transfer.
    #[serde(rename = "refund_id", deserialize_with = "Option::deserialize")]
    pub refund_id: Option<String>,
    /// The Plaid client ID that is the originator of the transfer that this event applies to. Only present if the transfer was created on behalf of another client as a third-party sender (TPS).
    #[serde(rename = "originator_client_id", deserialize_with = "Option::deserialize")]
    pub originator_client_id: Option<String>,
}

impl TransferEvent {
    /// Represents an event in the Transfers API.
    pub fn new(event_id: i32, timestamp: String, event_type: models::TransferEventType, funding_account_id: Option<String>, transfer_id: String, origination_account_id: Option<String>, failure_reason: Option<models::TransferFailure>, sweep_id: Option<String>, sweep_amount: Option<String>, refund_id: Option<String>, originator_client_id: Option<String>) -> TransferEvent {
        TransferEvent {
            event_id,
            timestamp,
            event_type,
            account_id: None,
            funding_account_id,
            ledger_id: None,
            transfer_id,
            origination_account_id,
            transfer_type: None,
            transfer_amount: None,
            failure_reason,
            sweep_id,
            sweep_amount,
            refund_id,
            originator_client_id,
        }
    }
}

