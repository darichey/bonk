/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BeaconDuplicateGetResponse : A Beacon Duplicate represents a pair of matching Beacon Users and an analysis of the fields they matched on.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BeaconDuplicateGetResponse {
    /// ID of the associated Beacon Duplicate.
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "beacon_user1")]
    pub beacon_user1: models::BeaconUserRevision,
    #[serde(rename = "beacon_user2")]
    pub beacon_user2: models::BeaconUserRevision,
    #[serde(rename = "analysis")]
    pub analysis: models::BeaconMatchSummaryAnalysis,
    /// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    #[serde(rename = "request_id")]
    pub request_id: String,
}

impl BeaconDuplicateGetResponse {
    /// A Beacon Duplicate represents a pair of matching Beacon Users and an analysis of the fields they matched on.
    pub fn new(id: String, beacon_user1: models::BeaconUserRevision, beacon_user2: models::BeaconUserRevision, analysis: models::BeaconMatchSummaryAnalysis, request_id: String) -> BeaconDuplicateGetResponse {
        BeaconDuplicateGetResponse {
            id,
            beacon_user1,
            beacon_user2,
            analysis,
            request_id,
        }
    }
}

