/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IssuesGetResponse : IssuesGetResponse defines the response schema for `/issues/get`.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssuesGetResponse {
    #[serde(rename = "issue", skip_serializing_if = "Option::is_none")]
    pub issue: Option<models::Issue>,
    /// A unique identifier for the API request.
    #[serde(rename = "request_id", skip_serializing_if = "Option::is_none")]
    pub request_id: Option<String>,
}

impl IssuesGetResponse {
    /// IssuesGetResponse defines the response schema for `/issues/get`.
    pub fn new() -> IssuesGetResponse {
        IssuesGetResponse {
            issue: None,
            request_id: None,
        }
    }
}

