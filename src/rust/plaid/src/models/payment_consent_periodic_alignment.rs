/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PaymentConsentPeriodicAlignment : Where the payment consent period should start.  If the institution is Monzo, only `CONSENT` alignments are supported.  `CALENDAR`: line up with a calendar.  `CONSENT`: on the date of consent creation.
/// Where the payment consent period should start.  If the institution is Monzo, only `CONSENT` alignments are supported.  `CALENDAR`: line up with a calendar.  `CONSENT`: on the date of consent creation.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PaymentConsentPeriodicAlignment {
    #[serde(rename = "CALENDAR")]
    Calendar,
    #[serde(rename = "CONSENT")]
    Consent,

}

impl std::fmt::Display for PaymentConsentPeriodicAlignment {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Calendar => write!(f, "CALENDAR"),
            Self::Consent => write!(f, "CONSENT"),
        }
    }
}

impl Default for PaymentConsentPeriodicAlignment {
    fn default() -> PaymentConsentPeriodicAlignment {
        Self::Calendar
    }
}

