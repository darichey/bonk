/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MonitoringInsightsStatus : Enum for the status of the insights
/// Enum for the status of the insights
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MonitoringInsightsStatus {
    #[serde(rename = "AVAILABLE")]
    Available,
    #[serde(rename = "FAILED")]
    Failed,
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "UNSUPPORTED")]
    Unsupported,
    #[serde(rename = "UNHEALTHY")]
    Unhealthy,

}

impl std::fmt::Display for MonitoringInsightsStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Available => write!(f, "AVAILABLE"),
            Self::Failed => write!(f, "FAILED"),
            Self::Pending => write!(f, "PENDING"),
            Self::Unsupported => write!(f, "UNSUPPORTED"),
            Self::Unhealthy => write!(f, "UNHEALTHY"),
        }
    }
}

impl Default for MonitoringInsightsStatus {
    fn default() -> MonitoringInsightsStatus {
        Self::Available
    }
}

