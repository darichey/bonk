/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IncomeBreakdownType : The type of income. Possible values include:   `\"regular\"`: regular income   `\"overtime\"`: overtime income   `\"bonus\"`: bonus income
/// The type of income. Possible values include:   `\"regular\"`: regular income   `\"overtime\"`: overtime income   `\"bonus\"`: bonus income
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IncomeBreakdownType {
    #[serde(rename = "bonus")]
    Bonus,
    #[serde(rename = "overtime")]
    Overtime,
    #[serde(rename = "regular")]
    Regular,
    #[serde(rename = "null")]
    Null,

}

impl std::fmt::Display for IncomeBreakdownType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Bonus => write!(f, "bonus"),
            Self::Overtime => write!(f, "overtime"),
            Self::Regular => write!(f, "regular"),
            Self::Null => write!(f, "null"),
        }
    }
}

impl Default for IncomeBreakdownType {
    fn default() -> IncomeBreakdownType {
        Self::Bonus
    }
}

