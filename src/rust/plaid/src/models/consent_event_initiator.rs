/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ConsentEventInitiator : The entity that initiated collection of consent.
/// The entity that initiated collection of consent.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConsentEventInitiator {
    #[serde(rename = "PLAID")]
    Plaid,
    #[serde(rename = "DATA_PROVIDER")]
    DataProvider,
    #[serde(rename = "CUSTOMER")]
    Customer,
    #[serde(rename = "END_USER")]
    EndUser,

}

impl std::fmt::Display for ConsentEventInitiator {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Plaid => write!(f, "PLAID"),
            Self::DataProvider => write!(f, "DATA_PROVIDER"),
            Self::Customer => write!(f, "CUSTOMER"),
            Self::EndUser => write!(f, "END_USER"),
        }
    }
}

impl Default for ConsentEventInitiator {
    fn default() -> ConsentEventInitiator {
        Self::Plaid
    }
}

