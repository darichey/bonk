/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetRecipientResponse : GetRecipientResponse defines the response schema for `/fdx/recipient/{recipientId}`
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetRecipientResponse {
    /// The recipient identifier
    #[serde(rename = "recipient_id")]
    pub recipient_id: String,
    /// The recipient name displayed by the Data Provider during the consent flow
    #[serde(rename = "client_name")]
    pub client_name: String,
    /// Data Recipient Logo URL location
    #[serde(rename = "logo_uri", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub logo_uri: Option<Option<String>>,
    /// The legal name of the recipient
    #[serde(rename = "third_party_legal_name")]
    pub third_party_legal_name: String,
}

impl GetRecipientResponse {
    /// GetRecipientResponse defines the response schema for `/fdx/recipient/{recipientId}`
    pub fn new(recipient_id: String, client_name: String, third_party_legal_name: String) -> GetRecipientResponse {
        GetRecipientResponse {
            recipient_id,
            client_name,
            logo_uri: None,
            third_party_legal_name,
        }
    }
}

