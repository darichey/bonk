/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RiskCheckEmail : Result summary object specifying values for `email` attributes of risk check.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RiskCheckEmail {
    #[serde(rename = "is_deliverable")]
    pub is_deliverable: models::RiskCheckEmailIsDeliverableStatus,
    /// Count of all known breaches of this email address if known.
    #[serde(rename = "breach_count", deserialize_with = "Option::deserialize")]
    pub breach_count: Option<i32>,
    /// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
    #[serde(rename = "first_breached_at", deserialize_with = "Option::deserialize")]
    pub first_breached_at: Option<String>,
    /// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
    #[serde(rename = "last_breached_at", deserialize_with = "Option::deserialize")]
    pub last_breached_at: Option<String>,
    /// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
    #[serde(rename = "domain_registered_at", deserialize_with = "Option::deserialize")]
    pub domain_registered_at: Option<String>,
    #[serde(rename = "domain_is_free_provider")]
    pub domain_is_free_provider: models::RiskCheckEmailDomainIsFreeProvider,
    #[serde(rename = "domain_is_custom")]
    pub domain_is_custom: models::RiskCheckEmailDomainIsCustom,
    #[serde(rename = "domain_is_disposable")]
    pub domain_is_disposable: models::RiskCheckEmailDomainIsDisposable,
    #[serde(rename = "top_level_domain_is_suspicious")]
    pub top_level_domain_is_suspicious: models::RiskCheckEmailTopLevelDomainIsSuspicious,
    /// A list of online services where this email address has been detected to have accounts or other activity.
    #[serde(rename = "linked_services")]
    pub linked_services: Vec<models::RiskCheckLinkedService>,
}

impl RiskCheckEmail {
    /// Result summary object specifying values for `email` attributes of risk check.
    pub fn new(is_deliverable: models::RiskCheckEmailIsDeliverableStatus, breach_count: Option<i32>, first_breached_at: Option<String>, last_breached_at: Option<String>, domain_registered_at: Option<String>, domain_is_free_provider: models::RiskCheckEmailDomainIsFreeProvider, domain_is_custom: models::RiskCheckEmailDomainIsCustom, domain_is_disposable: models::RiskCheckEmailDomainIsDisposable, top_level_domain_is_suspicious: models::RiskCheckEmailTopLevelDomainIsSuspicious, linked_services: Vec<models::RiskCheckLinkedService>) -> RiskCheckEmail {
        RiskCheckEmail {
            is_deliverable,
            breach_count,
            first_breached_at,
            last_breached_at,
            domain_registered_at,
            domain_is_free_provider,
            domain_is_custom,
            domain_is_disposable,
            top_level_domain_is_suspicious,
            linked_services,
        }
    }
}

