/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ConsumerDisputeCategory : Type of data being disputed by the consumer
/// Type of data being disputed by the consumer
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConsumerDisputeCategory {
    #[serde(rename = "TRANSACTION")]
    Transaction,
    #[serde(rename = "BALANCE")]
    Balance,
    #[serde(rename = "IDENTITY")]
    Identity,
    #[serde(rename = "OTHER")]
    Other,

}

impl std::fmt::Display for ConsumerDisputeCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Transaction => write!(f, "TRANSACTION"),
            Self::Balance => write!(f, "BALANCE"),
            Self::Identity => write!(f, "IDENTITY"),
            Self::Other => write!(f, "OTHER"),
        }
    }
}

impl Default for ConsumerDisputeCategory {
    fn default() -> ConsumerDisputeCategory {
        Self::Transaction
    }
}

