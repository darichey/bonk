/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SelfieAnalysisFacialAnalysis : Analysis of the facial features of the selfie when compared to the face in the uploaded document, if one is present.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SelfieAnalysisFacialAnalysis {
    #[serde(rename = "left_eye")]
    pub left_eye: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "right_eye")]
    pub right_eye: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "left_brow")]
    pub left_brow: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "right_brow")]
    pub right_brow: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "forehead")]
    pub forehead: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "middle_forehead")]
    pub middle_forehead: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "nose")]
    pub nose: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "philtrum")]
    pub philtrum: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "mouth")]
    pub mouth: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "jaw")]
    pub jaw: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "left_cheek")]
    pub left_cheek: models::SelfieAnalysisFacialAnalysisOutcome,
    #[serde(rename = "right_cheek")]
    pub right_cheek: models::SelfieAnalysisFacialAnalysisOutcome,
}

impl SelfieAnalysisFacialAnalysis {
    /// Analysis of the facial features of the selfie when compared to the face in the uploaded document, if one is present.
    pub fn new(left_eye: models::SelfieAnalysisFacialAnalysisOutcome, right_eye: models::SelfieAnalysisFacialAnalysisOutcome, left_brow: models::SelfieAnalysisFacialAnalysisOutcome, right_brow: models::SelfieAnalysisFacialAnalysisOutcome, forehead: models::SelfieAnalysisFacialAnalysisOutcome, middle_forehead: models::SelfieAnalysisFacialAnalysisOutcome, nose: models::SelfieAnalysisFacialAnalysisOutcome, philtrum: models::SelfieAnalysisFacialAnalysisOutcome, mouth: models::SelfieAnalysisFacialAnalysisOutcome, jaw: models::SelfieAnalysisFacialAnalysisOutcome, left_cheek: models::SelfieAnalysisFacialAnalysisOutcome, right_cheek: models::SelfieAnalysisFacialAnalysisOutcome) -> SelfieAnalysisFacialAnalysis {
        SelfieAnalysisFacialAnalysis {
            left_eye,
            right_eye,
            left_brow,
            right_brow,
            forehead,
            middle_forehead,
            nose,
            philtrum,
            mouth,
            jaw,
            left_cheek,
            right_cheek,
        }
    }
}

