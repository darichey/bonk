/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PartnerEndCustomerStatus : The status of the given end customer.  `UNDER_REVIEW`: The end customer has been created and enabled in the non-Production environments. The end customer must be manually reviewed by the Plaid team before it can be enabled in production, at which point its status will automatically transition to `PENDING_ENABLEMENT` or `DENIED`.  `PENDING_ENABLEMENT`: The end customer is ready to be enabled in the Production environment. Call the `/partner/customer/enable` endpoint to enable the end customer in Production.  `ACTIVE`: The end customer has been enabled in all environments.  `DENIED`: The end customer has been created and enabled in the non-Production environments, but it did not pass review by the Plaid team and therefore cannot be enabled in the Production environment. Talk to your Account Manager for more information.

/// The status of the given end customer.  `UNDER_REVIEW`: The end customer has been created and enabled in the non-Production environments. The end customer must be manually reviewed by the Plaid team before it can be enabled in production, at which point its status will automatically transition to `PENDING_ENABLEMENT` or `DENIED`.  `PENDING_ENABLEMENT`: The end customer is ready to be enabled in the Production environment. Call the `/partner/customer/enable` endpoint to enable the end customer in Production.  `ACTIVE`: The end customer has been enabled in all environments.  `DENIED`: The end customer has been created and enabled in the non-Production environments, but it did not pass review by the Plaid team and therefore cannot be enabled in the Production environment. Talk to your Account Manager for more information.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PartnerEndCustomerStatus {
    #[serde(rename = "UNDER_REVIEW")]
    UnderReview,
    #[serde(rename = "PENDING_ENABLEMENT")]
    PendingEnablement,
    #[serde(rename = "ACTIVE")]
    Active,
    #[serde(rename = "DENIED")]
    Denied,

}

impl ToString for PartnerEndCustomerStatus {
    fn to_string(&self) -> String {
        match self {
            Self::UnderReview => String::from("UNDER_REVIEW"),
            Self::PendingEnablement => String::from("PENDING_ENABLEMENT"),
            Self::Active => String::from("ACTIVE"),
            Self::Denied => String::from("DENIED"),
        }
    }
}

impl Default for PartnerEndCustomerStatus {
    fn default() -> PartnerEndCustomerStatus {
        Self::UnderReview
    }
}




