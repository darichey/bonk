/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PendingExpirationWebhook : Fired when an Item’s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Link’s update mode.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PendingExpirationWebhook {
    /// `ITEM`
    #[serde(rename = "webhook_type")]
    pub webhook_type: String,
    /// `PENDING_EXPIRATION`
    #[serde(rename = "webhook_code")]
    pub webhook_code: String,
    /// The `item_id` of the Item associated with this webhook, warning, or error
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// The date and time at which the Item's access consent will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format
    #[serde(rename = "consent_expiration_time")]
    pub consent_expiration_time: String,
    #[serde(rename = "environment")]
    pub environment: crate::models::WebhookEnvironmentValues,
}

impl PendingExpirationWebhook {
    /// Fired when an Item’s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Link’s update mode.
    pub fn new(webhook_type: String, webhook_code: String, item_id: String, consent_expiration_time: String, environment: crate::models::WebhookEnvironmentValues) -> PendingExpirationWebhook {
        PendingExpirationWebhook {
            webhook_type,
            webhook_code,
            item_id,
            consent_expiration_time,
            environment,
        }
    }
}


