/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IssuesStatus : The current status of the issue.
/// The current status of the issue.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IssuesStatus {
    #[serde(rename = "REPORTED")]
    Reported,
    #[serde(rename = "AWAITING_RESOLUTION")]
    AwaitingResolution,
    #[serde(rename = "FIX_IN_PROGRESS")]
    FixInProgress,
    #[serde(rename = "FIX_PENDING_VALIDATION")]
    FixPendingValidation,
    #[serde(rename = "CANNOT_FIX")]
    CannotFix,
    #[serde(rename = "RESOLVED")]
    Resolved,

}

impl std::fmt::Display for IssuesStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Reported => write!(f, "REPORTED"),
            Self::AwaitingResolution => write!(f, "AWAITING_RESOLUTION"),
            Self::FixInProgress => write!(f, "FIX_IN_PROGRESS"),
            Self::FixPendingValidation => write!(f, "FIX_PENDING_VALIDATION"),
            Self::CannotFix => write!(f, "CANNOT_FIX"),
            Self::Resolved => write!(f, "RESOLVED"),
        }
    }
}

impl Default for IssuesStatus {
    fn default() -> IssuesStatus {
        Self::Reported
    }
}

