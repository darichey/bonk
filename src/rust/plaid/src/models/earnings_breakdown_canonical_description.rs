/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EarningsBreakdownCanonicalDescription : Commonly used term to describe the earning line item.
/// Commonly used term to describe the earning line item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EarningsBreakdownCanonicalDescription {
    #[serde(rename = "BONUS")]
    Bonus,
    #[serde(rename = "COMMISSION")]
    Commission,
    #[serde(rename = "OVERTIME")]
    Overtime,
    #[serde(rename = "PAID TIME OFF")]
    PaidTimeOff,
    #[serde(rename = "REGULAR PAY")]
    RegularPay,
    #[serde(rename = "VACATION")]
    Vacation,
    #[serde(rename = "BASIC ALLOWANCE HOUSING")]
    BasicAllowanceHousing,
    #[serde(rename = "BASIC ALLOWANCE SUBSISTENCE")]
    BasicAllowanceSubsistence,
    #[serde(rename = "OTHER")]
    Other,
    #[serde(rename = "null")]
    Null,

}

impl std::fmt::Display for EarningsBreakdownCanonicalDescription {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Bonus => write!(f, "BONUS"),
            Self::Commission => write!(f, "COMMISSION"),
            Self::Overtime => write!(f, "OVERTIME"),
            Self::PaidTimeOff => write!(f, "PAID TIME OFF"),
            Self::RegularPay => write!(f, "REGULAR PAY"),
            Self::Vacation => write!(f, "VACATION"),
            Self::BasicAllowanceHousing => write!(f, "BASIC ALLOWANCE HOUSING"),
            Self::BasicAllowanceSubsistence => write!(f, "BASIC ALLOWANCE SUBSISTENCE"),
            Self::Other => write!(f, "OTHER"),
            Self::Null => write!(f, "null"),
        }
    }
}

impl Default for EarningsBreakdownCanonicalDescription {
    fn default() -> EarningsBreakdownCanonicalDescription {
        Self::Bonus
    }
}

