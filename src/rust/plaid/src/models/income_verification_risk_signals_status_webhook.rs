/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IncomeVerificationRiskSignalsStatusWebhook : Fired when risk signals have been processed for documents uploaded via Document Income. It will typically take a minute or two for this webhook to fire after the end user has uploaded their documents in the Document Income flow. Once this webhook has fired, `/credit/payroll_income/risk_signals/get` may then be called to determine whether the documents were successfully processed and to retrieve risk data.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IncomeVerificationRiskSignalsStatusWebhook {
    /// `\"INCOME\"`
    #[serde(rename = "webhook_type")]
    pub webhook_type: String,
    /// `INCOME_VERIFICATION_RISK_SIGNALS`
    #[serde(rename = "webhook_code")]
    pub webhook_code: String,
    /// The Item ID associated with the verification.
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// The Plaid `user_id` of the User associated with this webhook, warning, or error.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    /// `RISK_SIGNALS_PROCESSING_COMPLETE`: The income verification fraud detection processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/credit/payroll_income/risk_signals/get` endpoint to get all risk signal data.
    #[serde(rename = "risk_signals_status", skip_serializing_if = "Option::is_none")]
    pub risk_signals_status: Option<String>,
    #[serde(rename = "environment")]
    pub environment: crate::models::WebhookEnvironmentValues,
}

impl IncomeVerificationRiskSignalsStatusWebhook {
    /// Fired when risk signals have been processed for documents uploaded via Document Income. It will typically take a minute or two for this webhook to fire after the end user has uploaded their documents in the Document Income flow. Once this webhook has fired, `/credit/payroll_income/risk_signals/get` may then be called to determine whether the documents were successfully processed and to retrieve risk data.
    pub fn new(webhook_type: String, webhook_code: String, item_id: String, environment: crate::models::WebhookEnvironmentValues) -> IncomeVerificationRiskSignalsStatusWebhook {
        IncomeVerificationRiskSignalsStatusWebhook {
            webhook_type,
            webhook_code,
            item_id,
            user_id: None,
            risk_signals_status: None,
            environment,
        }
    }
}


