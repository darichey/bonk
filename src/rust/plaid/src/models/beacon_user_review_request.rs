/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// BeaconUserReviewRequest : Request input for updating the status of a Beacon User



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BeaconUserReviewRequest {
    /// ID of the associated Beacon User.
    #[serde(rename = "beacon_user_id")]
    pub beacon_user_id: String,
    #[serde(rename = "status")]
    pub status: crate::models::BeaconUserStatus,
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
}

impl BeaconUserReviewRequest {
    /// Request input for updating the status of a Beacon User
    pub fn new(beacon_user_id: String, status: crate::models::BeaconUserStatus) -> BeaconUserReviewRequest {
        BeaconUserReviewRequest {
            beacon_user_id,
            status,
            client_id: None,
            secret: None,
        }
    }
}


