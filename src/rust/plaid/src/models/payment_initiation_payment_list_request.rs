/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PaymentInitiationPaymentListRequest : PaymentInitiationPaymentListRequest defines the request schema for `/payment_initiation/payment/list`



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PaymentInitiationPaymentListRequest {
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// The maximum number of payments to return. If `count` is not specified, a maximum of 10 payments will be returned, beginning with the most recent payment before the cursor (if specified).
    #[serde(rename = "count", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub count: Option<Option<i32>>,
    /// A string in RFC 3339 format (i.e. \"2019-12-06T22:35:49Z\"). Only payments created before the cursor will be returned.
    #[serde(rename = "cursor", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cursor: Option<Option<String>>,
    /// The consent ID. If specified, only payments, executed using this consent, will be returned.
    #[serde(rename = "consent_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub consent_id: Option<Option<String>>,
}

impl PaymentInitiationPaymentListRequest {
    /// PaymentInitiationPaymentListRequest defines the request schema for `/payment_initiation/payment/list`
    pub fn new() -> PaymentInitiationPaymentListRequest {
        PaymentInitiationPaymentListRequest {
            client_id: None,
            secret: None,
            count: None,
            cursor: None,
            consent_id: None,
        }
    }
}


