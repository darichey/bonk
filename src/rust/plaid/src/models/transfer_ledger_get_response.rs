/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TransferLedgerGetResponse : Defines the response schema for `/transfer/ledger/get`
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferLedgerGetResponse {
    /// The unique identifier of the Ledger that was returned.
    #[serde(rename = "ledger_id")]
    pub ledger_id: String,
    #[serde(rename = "balance")]
    pub balance: models::TransferLedgerBalance,
    /// The name of the Ledger
    #[serde(rename = "name")]
    pub name: String,
    /// Whether this Ledger is the client's default ledger.
    #[serde(rename = "is_default")]
    pub is_default: bool,
    /// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    #[serde(rename = "request_id")]
    pub request_id: String,
}

impl TransferLedgerGetResponse {
    /// Defines the response schema for `/transfer/ledger/get`
    pub fn new(ledger_id: String, balance: models::TransferLedgerBalance, name: String, is_default: bool, request_id: String) -> TransferLedgerGetResponse {
        TransferLedgerGetResponse {
            ledger_id,
            balance,
            name,
            is_default,
            request_id,
        }
    }
}

