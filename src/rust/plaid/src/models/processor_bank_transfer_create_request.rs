/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProcessorBankTransferCreateRequest : Defines the request schema for `/processor/bank_transfer/create`
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProcessorBankTransferCreateRequest {
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// A random key provided by the client, per unique bank transfer. Maximum of 50 characters.  The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.
    #[serde(rename = "idempotency_key")]
    pub idempotency_key: String,
    /// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
    #[serde(rename = "processor_token")]
    pub processor_token: String,
    #[serde(rename = "type")]
    pub r#type: models::BankTransferType,
    #[serde(rename = "network")]
    pub network: models::BankTransferNetwork,
    /// The amount of the bank transfer (decimal string with two digits of precision e.g. \"10.00\").
    #[serde(rename = "amount")]
    pub amount: String,
    /// The currency of the transfer amount – should be set to \"USD\".
    #[serde(rename = "iso_currency_code")]
    pub iso_currency_code: String,
    /// The transfer description. Maximum of 10 characters.
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "ach_class", skip_serializing_if = "Option::is_none")]
    pub ach_class: Option<models::AchClass>,
    #[serde(rename = "user")]
    pub user: models::BankTransferUser,
    /// An arbitrary string provided by the client for storage with the bank transfer. May be up to 100 characters.
    #[serde(rename = "custom_tag", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_tag: Option<Option<String>>,
    /// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply: The JSON values must be Strings (no nested JSON objects allowed) Only ASCII characters may be used Maximum of 50 key/value pairs Maximum key length of 40 characters Maximum value length of 500 characters 
    #[serde(rename = "metadata", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Option<std::collections::HashMap<String, String>>>,
    /// Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.
    #[serde(rename = "origination_account_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub origination_account_id: Option<Option<String>>,
}

impl ProcessorBankTransferCreateRequest {
    /// Defines the request schema for `/processor/bank_transfer/create`
    pub fn new(idempotency_key: String, processor_token: String, r#type: models::BankTransferType, network: models::BankTransferNetwork, amount: String, iso_currency_code: String, description: String, user: models::BankTransferUser) -> ProcessorBankTransferCreateRequest {
        ProcessorBankTransferCreateRequest {
            client_id: None,
            secret: None,
            idempotency_key,
            processor_token,
            r#type,
            network,
            amount,
            iso_currency_code,
            description,
            ach_class: None,
            user,
            custom_tag: None,
            metadata: None,
            origination_account_id: None,
        }
    }
}

