/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CraBankIncomeWarningCode : The warning code identifies a specific kind of warning. `IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item `TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item `REPORT_DELETED`: Report deleted due to customer or consumer request `DATA_UNAVAILABLE`: No relevant data was found for the Item
/// The warning code identifies a specific kind of warning. `IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item `TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item `REPORT_DELETED`: Report deleted due to customer or consumer request `DATA_UNAVAILABLE`: No relevant data was found for the Item
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CraBankIncomeWarningCode {
    #[serde(rename = "IDENTITY_UNAVAILABLE")]
    IdentityUnavailable,
    #[serde(rename = "TRANSACTIONS_UNAVAILABLE")]
    TransactionsUnavailable,
    #[serde(rename = "REPORT_DELETED")]
    ReportDeleted,
    #[serde(rename = "DATA_UNAVAILABLE")]
    DataUnavailable,

}

impl std::fmt::Display for CraBankIncomeWarningCode {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::IdentityUnavailable => write!(f, "IDENTITY_UNAVAILABLE"),
            Self::TransactionsUnavailable => write!(f, "TRANSACTIONS_UNAVAILABLE"),
            Self::ReportDeleted => write!(f, "REPORT_DELETED"),
            Self::DataUnavailable => write!(f, "DATA_UNAVAILABLE"),
        }
    }
}

impl Default for CraBankIncomeWarningCode {
    fn default() -> CraBankIncomeWarningCode {
        Self::IdentityUnavailable
    }
}

