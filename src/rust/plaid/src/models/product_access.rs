/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProductAccess : The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductAccess {
    /// Allow access to statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "statements", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub statements: Option<Option<bool>>,
    /// Allow access to the Identity product (name, email, phone, address). Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "identity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub identity: Option<Option<bool>>,
    /// Allow access to account number details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "auth", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub auth: Option<Option<bool>>,
    /// Allow access to transaction details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "transactions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub transactions: Option<Option<bool>>,
    /// Allow access to \"accounts_details_transactions\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "accounts_details_transactions", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub accounts_details_transactions: Option<Option<bool>>,
    /// Allow access to \"accounts_routing_number\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "accounts_routing_number", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub accounts_routing_number: Option<Option<bool>>,
    /// Allow access to \"accounts_statements\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "accounts_statements", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub accounts_statements: Option<Option<bool>>,
    /// Allow access to \"accounts_tax_statements\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "accounts_tax_statements", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub accounts_tax_statements: Option<Option<bool>>,
    /// Allow access to \"customers_profiles\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
    #[serde(rename = "customers_profiles", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub customers_profiles: Option<Option<bool>>,
}

impl ProductAccess {
    /// The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
    pub fn new() -> ProductAccess {
        ProductAccess {
            statements: None,
            identity: None,
            auth: None,
            transactions: None,
            accounts_details_transactions: None,
            accounts_routing_number: None,
            accounts_statements: None,
            accounts_tax_statements: None,
            customers_profiles: None,
        }
    }
}

