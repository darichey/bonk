/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CraLoanRegister : Contains loan data to register.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CraLoanRegister {
    /// The user token for the user associated with the loan.
    #[serde(rename = "user_token")]
    pub user_token: String,
    /// A unique identifier for the loan.  Personally identifiable information, such as an email address or phone number, should not be used in the `loan_id`.
    #[serde(rename = "loan_id")]
    pub loan_id: String,
    #[serde(rename = "type")]
    pub r#type: crate::models::CraLoanType,
    #[serde(rename = "payment_schedule")]
    pub payment_schedule: crate::models::CraLoanPaymentSchedule,
    /// The date the loan account was opened. The date should be in ISO 8601 format (YYYY-MM-DD).
    #[serde(rename = "opened_date")]
    pub opened_date: String,
    #[serde(rename = "opened_with_status")]
    pub opened_with_status: crate::models::CraLoanOpenedStatus,
    /// The total amount of the approved loan.
    #[serde(rename = "loan_amount", skip_serializing_if = "Option::is_none")]
    pub loan_amount: Option<f32>,
    #[serde(rename = "application", skip_serializing_if = "Option::is_none")]
    pub application: Option<crate::models::CraLoanRegisterApplication>,
}

impl CraLoanRegister {
    /// Contains loan data to register.
    pub fn new(user_token: String, loan_id: String, r#type: crate::models::CraLoanType, payment_schedule: crate::models::CraLoanPaymentSchedule, opened_date: String, opened_with_status: crate::models::CraLoanOpenedStatus) -> CraLoanRegister {
        CraLoanRegister {
            user_token,
            loan_id,
            r#type,
            payment_schedule,
            opened_date,
            opened_with_status,
            loan_amount: None,
            application: None,
        }
    }
}


