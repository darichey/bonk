/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// StatementsListResponse : StatementsListResponse defines the response schema for `/statements/list`
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatementsListResponse {
    #[serde(rename = "accounts")]
    pub accounts: Vec<models::StatementsAccount>,
    /// The Plaid Institution ID associated with the Item.
    #[serde(rename = "institution_id")]
    pub institution_id: String,
    /// The name of the institution associated with the Item.
    #[serde(rename = "institution_name")]
    pub institution_name: String,
    /// The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    #[serde(rename = "request_id")]
    pub request_id: String,
}

impl StatementsListResponse {
    /// StatementsListResponse defines the response schema for `/statements/list`
    pub fn new(accounts: Vec<models::StatementsAccount>, institution_id: String, institution_name: String, item_id: String, request_id: String) -> StatementsListResponse {
        StatementsListResponse {
            accounts,
            institution_id,
            institution_name,
            item_id,
            request_id,
        }
    }
}

