/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EnrichTransactionDirection : The direction of the transaction from the perspective of the account holder:  `OUTFLOW` - Includes outgoing transfers, purchases, and fees. (Typically represented as a negative value on checking accounts and debit cards and a positive value on credit cards.)  `INFLOW` - Includes incoming transfers, refunds, and income. (Typically represented as a positive value on checking accounts and debit cards and a negative value on credit cards.)
/// The direction of the transaction from the perspective of the account holder:  `OUTFLOW` - Includes outgoing transfers, purchases, and fees. (Typically represented as a negative value on checking accounts and debit cards and a positive value on credit cards.)  `INFLOW` - Includes incoming transfers, refunds, and income. (Typically represented as a positive value on checking accounts and debit cards and a negative value on credit cards.)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EnrichTransactionDirection {
    #[serde(rename = "INFLOW")]
    Inflow,
    #[serde(rename = "OUTFLOW")]
    Outflow,

}

impl std::fmt::Display for EnrichTransactionDirection {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Inflow => write!(f, "INFLOW"),
            Self::Outflow => write!(f, "OUTFLOW"),
        }
    }
}

impl Default for EnrichTransactionDirection {
    fn default() -> EnrichTransactionDirection {
        Self::Inflow
    }
}

