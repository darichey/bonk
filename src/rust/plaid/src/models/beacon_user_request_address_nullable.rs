/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BeaconUserRequestAddressNullable : Home address for the associated user. For more context on this field, see [Input Validation by Country](https://plaid.com/docs/identity-verification/hybrid-input-validation/#input-validation-by-country).
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BeaconUserRequestAddressNullable {
    /// The primary street portion of an address. If an address is provided, this field will always be filled. A string with at least one non-whitespace alphabetical character, with a max length of 80 characters.
    #[serde(rename = "street")]
    pub street: String,
    /// Extra street information, like an apartment or suite number. If provided, a string with at least one non-whitespace character, with a max length of 50 characters.
    #[serde(rename = "street2", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub street2: Option<Option<String>>,
    /// City from the end user's address. A string with at least one non-whitespace alphabetical character, with a max length of 100 characters.\"
    #[serde(rename = "city")]
    pub city: String,
    /// An ISO 3166-2 subdivision code. Related terms would be \"state\", \"province\", \"prefecture\", \"zone\", \"subdivision\", etc.
    #[serde(rename = "region", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub region: Option<Option<String>>,
    /// The postal code for the associated address. Between 2 and 10 alphanumeric characters. For US-based addresses this must be 5 numeric digits.
    #[serde(rename = "postal_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub postal_code: Option<Option<String>>,
    /// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
    #[serde(rename = "country")]
    pub country: String,
}

impl BeaconUserRequestAddressNullable {
    /// Home address for the associated user. For more context on this field, see [Input Validation by Country](https://plaid.com/docs/identity-verification/hybrid-input-validation/#input-validation-by-country).
    pub fn new(street: String, city: String, country: String) -> BeaconUserRequestAddressNullable {
        BeaconUserRequestAddressNullable {
            street,
            street2: None,
            city,
            region: None,
            postal_code: None,
            country,
        }
    }
}

