/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LoanAccountSubtype : Valid account subtypes for loan accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-loan).
/// Valid account subtypes for loan accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-loan).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LoanAccountSubtype {
    #[serde(rename = "auto")]
    Auto,
    #[serde(rename = "business")]
    Business,
    #[serde(rename = "commercial")]
    Commercial,
    #[serde(rename = "construction")]
    Construction,
    #[serde(rename = "consumer")]
    Consumer,
    #[serde(rename = "home equity")]
    HomeEquity,
    #[serde(rename = "loan")]
    Loan,
    #[serde(rename = "mortgage")]
    Mortgage,
    #[serde(rename = "line of credit")]
    LineOfCredit,
    #[serde(rename = "student")]
    Student,
    #[serde(rename = "other")]
    Other,
    #[serde(rename = "all")]
    All,

}

impl std::fmt::Display for LoanAccountSubtype {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Auto => write!(f, "auto"),
            Self::Business => write!(f, "business"),
            Self::Commercial => write!(f, "commercial"),
            Self::Construction => write!(f, "construction"),
            Self::Consumer => write!(f, "consumer"),
            Self::HomeEquity => write!(f, "home equity"),
            Self::Loan => write!(f, "loan"),
            Self::Mortgage => write!(f, "mortgage"),
            Self::LineOfCredit => write!(f, "line of credit"),
            Self::Student => write!(f, "student"),
            Self::Other => write!(f, "other"),
            Self::All => write!(f, "all"),
        }
    }
}

impl Default for LoanAccountSubtype {
    fn default() -> LoanAccountSubtype {
        Self::Auto
    }
}

