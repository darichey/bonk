/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TransferPlatformRequirementSubmitRequest : Defines the request schema for `/transfer/platform/requirement/submit`
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferPlatformRequirementSubmitRequest {
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// The client ID of the originator
    #[serde(rename = "originator_client_id")]
    pub originator_client_id: String,
    /// A list of requirement submissions that all relate to the originator. Must contain between 1 and 50 requirement submissions.
    #[serde(rename = "requirement_submissions")]
    pub requirement_submissions: Vec<models::TransferPlatformRequirementSubmission>,
}

impl TransferPlatformRequirementSubmitRequest {
    /// Defines the request schema for `/transfer/platform/requirement/submit`
    pub fn new(originator_client_id: String, requirement_submissions: Vec<models::TransferPlatformRequirementSubmission>) -> TransferPlatformRequirementSubmitRequest {
        TransferPlatformRequirementSubmitRequest {
            client_id: None,
            secret: None,
            originator_client_id,
            requirement_submissions,
        }
    }
}

