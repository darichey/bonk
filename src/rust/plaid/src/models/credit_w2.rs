/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreditW2 : W2 is an object that represents income data taken from a W2 tax document.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreditW2 {
    #[serde(rename = "document_metadata")]
    pub document_metadata: models::CreditDocumentMetadata,
    /// An identifier of the document referenced by the document metadata.
    #[serde(rename = "document_id")]
    pub document_id: String,
    #[serde(rename = "employer")]
    pub employer: models::CreditPayStubEmployer,
    #[serde(rename = "employee")]
    pub employee: models::CreditPayStubEmployee,
    /// The tax year of the W2 document.
    #[serde(rename = "tax_year", deserialize_with = "Option::deserialize")]
    pub tax_year: Option<String>,
    /// An employee identification number or EIN.
    #[serde(rename = "employer_id_number", deserialize_with = "Option::deserialize")]
    pub employer_id_number: Option<String>,
    /// Wages from tips and other compensation.
    #[serde(rename = "wages_tips_other_comp", deserialize_with = "Option::deserialize")]
    pub wages_tips_other_comp: Option<String>,
    /// Federal income tax withheld for the tax year.
    #[serde(rename = "federal_income_tax_withheld", deserialize_with = "Option::deserialize")]
    pub federal_income_tax_withheld: Option<String>,
    /// Wages from social security.
    #[serde(rename = "social_security_wages", deserialize_with = "Option::deserialize")]
    pub social_security_wages: Option<String>,
    /// Social security tax withheld for the tax year.
    #[serde(rename = "social_security_tax_withheld", deserialize_with = "Option::deserialize")]
    pub social_security_tax_withheld: Option<String>,
    /// Wages and tips from medicare.
    #[serde(rename = "medicare_wages_and_tips", deserialize_with = "Option::deserialize")]
    pub medicare_wages_and_tips: Option<String>,
    /// Medicare tax withheld for the tax year.
    #[serde(rename = "medicare_tax_withheld", deserialize_with = "Option::deserialize")]
    pub medicare_tax_withheld: Option<String>,
    /// Tips from social security.
    #[serde(rename = "social_security_tips", deserialize_with = "Option::deserialize")]
    pub social_security_tips: Option<String>,
    /// Allocated tips.
    #[serde(rename = "allocated_tips", deserialize_with = "Option::deserialize")]
    pub allocated_tips: Option<String>,
    /// Contents from box 9 on the W2.
    #[serde(rename = "box_9", deserialize_with = "Option::deserialize")]
    pub box_9: Option<String>,
    /// Dependent care benefits.
    #[serde(rename = "dependent_care_benefits", deserialize_with = "Option::deserialize")]
    pub dependent_care_benefits: Option<String>,
    /// Nonqualified plans.
    #[serde(rename = "nonqualified_plans", deserialize_with = "Option::deserialize")]
    pub nonqualified_plans: Option<String>,
    #[serde(rename = "box_12")]
    pub box_12: Vec<models::W2Box12>,
    /// Statutory employee.
    #[serde(rename = "statutory_employee", deserialize_with = "Option::deserialize")]
    pub statutory_employee: Option<String>,
    /// Retirement plan.
    #[serde(rename = "retirement_plan", deserialize_with = "Option::deserialize")]
    pub retirement_plan: Option<String>,
    /// Third party sick pay.
    #[serde(rename = "third_party_sick_pay", deserialize_with = "Option::deserialize")]
    pub third_party_sick_pay: Option<String>,
    /// Other.
    #[serde(rename = "other", deserialize_with = "Option::deserialize")]
    pub other: Option<String>,
    #[serde(rename = "state_and_local_wages")]
    pub state_and_local_wages: Vec<models::W2StateAndLocalWages>,
}

impl CreditW2 {
    /// W2 is an object that represents income data taken from a W2 tax document.
    pub fn new(document_metadata: models::CreditDocumentMetadata, document_id: String, employer: models::CreditPayStubEmployer, employee: models::CreditPayStubEmployee, tax_year: Option<String>, employer_id_number: Option<String>, wages_tips_other_comp: Option<String>, federal_income_tax_withheld: Option<String>, social_security_wages: Option<String>, social_security_tax_withheld: Option<String>, medicare_wages_and_tips: Option<String>, medicare_tax_withheld: Option<String>, social_security_tips: Option<String>, allocated_tips: Option<String>, box_9: Option<String>, dependent_care_benefits: Option<String>, nonqualified_plans: Option<String>, box_12: Vec<models::W2Box12>, statutory_employee: Option<String>, retirement_plan: Option<String>, third_party_sick_pay: Option<String>, other: Option<String>, state_and_local_wages: Vec<models::W2StateAndLocalWages>) -> CreditW2 {
        CreditW2 {
            document_metadata,
            document_id,
            employer,
            employee,
            tax_year,
            employer_id_number,
            wages_tips_other_comp,
            federal_income_tax_withheld,
            social_security_wages,
            social_security_tax_withheld,
            medicare_wages_and_tips,
            medicare_tax_withheld,
            social_security_tips,
            allocated_tips,
            box_9,
            dependent_care_benefits,
            nonqualified_plans,
            box_12,
            statutory_employee,
            retirement_plan,
            third_party_sick_pay,
            other,
            state_and_local_wages,
        }
    }
}

