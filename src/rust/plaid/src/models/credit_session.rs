/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CreditSession : Metadata and results for a Link session



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreditSession {
    /// The unique identifier associated with the Link session. This identifier matches the `link_session_id` returned in the onSuccess/onExit callbacks.
    #[serde(rename = "link_session_id", skip_serializing_if = "Option::is_none")]
    pub link_session_id: Option<String>,
    /// The time when the Link session started
    #[serde(rename = "session_start_time", skip_serializing_if = "Option::is_none")]
    pub session_start_time: Option<String>,
    #[serde(rename = "results", skip_serializing_if = "Option::is_none")]
    pub results: Option<Box<crate::models::CreditSessionResults>>,
    /// The set of errors that occurred during the Link session.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<crate::models::CreditSessionError>>,
}

impl CreditSession {
    /// Metadata and results for a Link session
    pub fn new() -> CreditSession {
        CreditSession {
            link_session_id: None,
            session_start_time: None,
            results: None,
            errors: None,
        }
    }
}


