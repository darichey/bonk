/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// BaseReportAttributes : Calculated attributes derived from transaction-level data.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BaseReportAttributes {
    /// The number of NSF and overdraft fee transactions in the time range for the report in the given account.
    #[serde(rename = "nsf_overdraft_transactions_count", skip_serializing_if = "Option::is_none")]
    pub nsf_overdraft_transactions_count: Option<i32>,
    /// Prediction indicator of whether the account is a primary account. Only one account per account type across the items connected will have a value of true.
    #[serde(rename = "is_primary_account", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_primary_account: Option<Option<bool>>,
    /// Value ranging from 0-1. The higher the score, the more confident we are of the account being the primary account.
    #[serde(rename = "primary_account_score", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub primary_account_score: Option<Option<f32>>,
    #[serde(rename = "total_inflow_amount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_inflow_amount: Option<Option<crate::models::TotalInflowAmount>>,
    #[serde(rename = "total_inflow_amount_30d", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_inflow_amount_30d: Option<Option<crate::models::TotalInflowAmount30d>>,
    #[serde(rename = "total_inflow_amount_60d", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_inflow_amount_60d: Option<Option<crate::models::TotalInflowAmount60d>>,
    #[serde(rename = "total_inflow_amount_90d", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_inflow_amount_90d: Option<Option<crate::models::TotalInflowAmount90d>>,
    #[serde(rename = "total_outflow_amount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_outflow_amount: Option<Option<crate::models::TotalOutflowAmount>>,
    #[serde(rename = "total_outflow_amount_30d", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_outflow_amount_30d: Option<Option<crate::models::TotalOutflowAmount30d>>,
    #[serde(rename = "total_outflow_amount_60d", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_outflow_amount_60d: Option<Option<crate::models::TotalOutflowAmount60d>>,
    #[serde(rename = "total_outflow_amount_90d", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub total_outflow_amount_90d: Option<Option<crate::models::TotalOutflowAmount90d>>,
}

impl BaseReportAttributes {
    /// Calculated attributes derived from transaction-level data.
    pub fn new() -> BaseReportAttributes {
        BaseReportAttributes {
            nsf_overdraft_transactions_count: None,
            is_primary_account: None,
            primary_account_score: None,
            total_inflow_amount: None,
            total_inflow_amount_30d: None,
            total_inflow_amount_60d: None,
            total_inflow_amount_90d: None,
            total_outflow_amount: None,
            total_outflow_amount_30d: None,
            total_outflow_amount_60d: None,
            total_outflow_amount_90d: None,
        }
    }
}


