/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FdxNotificationType : Type of Notification
/// Type of Notification
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FdxNotificationType {
    #[serde(rename = "CONSENT_REVOKED")]
    ConsentRevoked,
    #[serde(rename = "CONSENT_UPDATED")]
    ConsentUpdated,
    #[serde(rename = "CUSTOM")]
    Custom,
    #[serde(rename = "SERVICE")]
    Service,
    #[serde(rename = "BALANCE")]
    Balance,
    #[serde(rename = "PLANNED_OUTAGE")]
    PlannedOutage,

}

impl std::fmt::Display for FdxNotificationType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ConsentRevoked => write!(f, "CONSENT_REVOKED"),
            Self::ConsentUpdated => write!(f, "CONSENT_UPDATED"),
            Self::Custom => write!(f, "CUSTOM"),
            Self::Service => write!(f, "SERVICE"),
            Self::Balance => write!(f, "BALANCE"),
            Self::PlannedOutage => write!(f, "PLANNED_OUTAGE"),
        }
    }
}

impl Default for FdxNotificationType {
    fn default() -> FdxNotificationType {
        Self::ConsentRevoked
    }
}

