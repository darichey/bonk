/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// FdxPartyType : Identifies the type of a party

/// Identifies the type of a party
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FdxPartyType {
    #[serde(rename = "DATA_ACCESS_PLATFORM")]
    DataAccessPlatform,
    #[serde(rename = "DATA_PROVIDER")]
    DataProvider,
    #[serde(rename = "DATA_RECIPIENT")]
    DataRecipient,
    #[serde(rename = "INDIVIDUAL")]
    Individual,
    #[serde(rename = "MERCHANT")]
    Merchant,
    #[serde(rename = "VENDOR")]
    Vendor,

}

impl ToString for FdxPartyType {
    fn to_string(&self) -> String {
        match self {
            Self::DataAccessPlatform => String::from("DATA_ACCESS_PLATFORM"),
            Self::DataProvider => String::from("DATA_PROVIDER"),
            Self::DataRecipient => String::from("DATA_RECIPIENT"),
            Self::Individual => String::from("INDIVIDUAL"),
            Self::Merchant => String::from("MERCHANT"),
            Self::Vendor => String::from("VENDOR"),
        }
    }
}

impl Default for FdxPartyType {
    fn default() -> FdxPartyType {
        Self::DataAccessPlatform
    }
}




