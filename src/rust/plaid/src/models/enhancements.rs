/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Enhancements : A grouping of the Plaid produced transaction enhancement fields.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Enhancements {
    /// The name of the primary counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
    #[serde(rename = "merchant_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub merchant_name: Option<Option<String>>,
    /// The website associated with this transaction, if available.
    #[serde(rename = "website", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub website: Option<Option<String>>,
    /// The URL of a logo associated with this transaction, if available. The logo will always be 100×100 pixel PNG file.
    #[serde(rename = "logo_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub logo_url: Option<Option<String>>,
    /// The check number of the transaction. This field is only populated for check transactions.
    #[serde(rename = "check_number", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub check_number: Option<Option<String>>,
    #[serde(rename = "payment_channel")]
    pub payment_channel: crate::models::PaymentChannel,
    /// The ID of the category to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
    #[serde(rename = "category_id", deserialize_with = "Option::deserialize")]
    pub category_id: Option<String>,
    /// A hierarchical array of the categories to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
    #[serde(rename = "category")]
    pub category: Vec<String>,
    #[serde(rename = "location")]
    pub location: crate::models::Location,
    #[serde(rename = "personal_finance_category", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub personal_finance_category: Option<Option<crate::models::PersonalFinanceCategory>>,
    /// The URL of an icon associated with the primary personal finance category. The icon will always be 100×100 pixel PNG file.
    #[serde(rename = "personal_finance_category_icon_url", skip_serializing_if = "Option::is_none")]
    pub personal_finance_category_icon_url: Option<String>,
    /// The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description.
    #[serde(rename = "counterparties", skip_serializing_if = "Option::is_none")]
    pub counterparties: Option<Vec<crate::models::Counterparty>>,
}

impl Enhancements {
    /// A grouping of the Plaid produced transaction enhancement fields.
    pub fn new(payment_channel: crate::models::PaymentChannel, category_id: Option<String>, category: Vec<String>, location: crate::models::Location) -> Enhancements {
        Enhancements {
            merchant_name: None,
            website: None,
            logo_url: None,
            check_number: None,
            payment_channel,
            category_id,
            category,
            location,
            personal_finance_category: None,
            personal_finance_category_icon_url: None,
            counterparties: None,
        }
    }
}


