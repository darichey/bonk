/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// WatchlistScreeningEntityListRequest : Request input for listing entity watchlist screenings



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WatchlistScreeningEntityListRequest {
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// ID of the associated entity program.
    #[serde(rename = "entity_watchlist_program_id")]
    pub entity_watchlist_program_id: String,
    /// A unique ID that identifies the end user in your system. This ID can also be used to associate user-specific data from other Plaid products. Financial Account Matching requires this field and the `/link/token/create` `client_user_id` to be consistent. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
    #[serde(rename = "client_user_id", skip_serializing_if = "Option::is_none")]
    pub client_user_id: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::WatchlistScreeningStatus>,
    /// ID of the associated user.
    #[serde(rename = "assignee", skip_serializing_if = "Option::is_none")]
    pub assignee: Option<String>,
    /// An identifier that determines which page of results you receive.
    #[serde(rename = "cursor", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cursor: Option<Option<String>>,
}

impl WatchlistScreeningEntityListRequest {
    /// Request input for listing entity watchlist screenings
    pub fn new(entity_watchlist_program_id: String) -> WatchlistScreeningEntityListRequest {
        WatchlistScreeningEntityListRequest {
            secret: None,
            client_id: None,
            entity_watchlist_program_id,
            client_user_id: None,
            status: None,
            assignee: None,
            cursor: None,
        }
    }
}


