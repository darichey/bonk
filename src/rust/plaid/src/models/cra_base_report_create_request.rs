/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.586.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CraBaseReportCreateRequest : CraBaseReportCreateRequest defines the request schema for `/cra/base_report/create`
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CraBaseReportCreateRequest {
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// The user token associated with the User data is being requested for.
    #[serde(rename = "user_token")]
    pub user_token: String,
    /// The duration of transaction history you requested
    #[serde(rename = "days_requested")]
    pub days_requested: i32,
    /// URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
    #[serde(rename = "webhook", deserialize_with = "Option::deserialize")]
    pub webhook: Option<String>,
    #[serde(rename = "consumer_report_permissible_purpose")]
    pub consumer_report_permissible_purpose: models::ConsumerReportPermissiblePurpose,
}

impl CraBaseReportCreateRequest {
    /// CraBaseReportCreateRequest defines the request schema for `/cra/base_report/create`
    pub fn new(user_token: String, days_requested: i32, webhook: Option<String>, consumer_report_permissible_purpose: models::ConsumerReportPermissiblePurpose) -> CraBaseReportCreateRequest {
        CraBaseReportCreateRequest {
            client_id: None,
            secret: None,
            user_token,
            days_requested,
            webhook,
            consumer_report_permissible_purpose,
        }
    }
}

