/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.457.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PayStubPayPeriodDetails : Details about the pay period.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PayStubPayPeriodDetails {
    /// The amount of the paycheck.
    #[serde(rename = "pay_amount", deserialize_with = "Option::deserialize")]
    pub pay_amount: Option<f64>,
    #[serde(rename = "distribution_breakdown")]
    pub distribution_breakdown: Vec<crate::models::PayStubDistributionBreakdown>,
    /// The date on which the pay period ended, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
    #[serde(rename = "end_date", deserialize_with = "Option::deserialize")]
    pub end_date: Option<String>,
    /// Total earnings before tax/deductions.
    #[serde(rename = "gross_earnings", deserialize_with = "Option::deserialize")]
    pub gross_earnings: Option<f64>,
    /// The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
    #[serde(rename = "iso_currency_code", deserialize_with = "Option::deserialize")]
    pub iso_currency_code: Option<String>,
    /// The date on which the pay stub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
    #[serde(rename = "pay_date", deserialize_with = "Option::deserialize")]
    pub pay_date: Option<String>,
    /// The frequency at which an individual is paid.
    #[serde(rename = "pay_frequency", deserialize_with = "Option::deserialize")]
    pub pay_frequency: Option<String>,
    #[serde(rename = "pay_basis", skip_serializing_if = "Option::is_none")]
    pub pay_basis: Option<crate::models::CreditPayStubPayBasisType>,
    /// The date on which the pay period started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
    #[serde(rename = "start_date", deserialize_with = "Option::deserialize")]
    pub start_date: Option<String>,
    /// The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
    #[serde(rename = "unofficial_currency_code", deserialize_with = "Option::deserialize")]
    pub unofficial_currency_code: Option<String>,
}

impl PayStubPayPeriodDetails {
    /// Details about the pay period.
    pub fn new(pay_amount: Option<f64>, distribution_breakdown: Vec<crate::models::PayStubDistributionBreakdown>, end_date: Option<String>, gross_earnings: Option<f64>, iso_currency_code: Option<String>, pay_date: Option<String>, pay_frequency: Option<String>, start_date: Option<String>, unofficial_currency_code: Option<String>) -> PayStubPayPeriodDetails {
        PayStubPayPeriodDetails {
            pay_amount,
            distribution_breakdown,
            end_date,
            gross_earnings,
            iso_currency_code,
            pay_date,
            pay_frequency,
            pay_basis: None,
            start_date,
            unofficial_currency_code,
        }
    }
}


