/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.457.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TransferRefund : Represents a refund within the Transfers API.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TransferRefund {
    /// Plaidâ€™s unique identifier for a refund.
    #[serde(rename = "id")]
    pub id: String,
    /// The ID of the transfer to refund.
    #[serde(rename = "transfer_id")]
    pub transfer_id: String,
    /// The amount of the refund (decimal string with two digits of precision e.g. \"10.00\").
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "status")]
    pub status: crate::models::TransferRefundStatus,
    #[serde(rename = "failure_reason", deserialize_with = "Option::deserialize")]
    pub failure_reason: Option<crate::models::TransferRefundFailure>,
    /// The datetime when this refund was created. This will be of the form `2006-01-02T15:04:05Z`
    #[serde(rename = "created")]
    pub created: String,
}

impl TransferRefund {
    /// Represents a refund within the Transfers API.
    pub fn new(id: String, transfer_id: String, amount: String, status: crate::models::TransferRefundStatus, failure_reason: Option<crate::models::TransferRefundFailure>, created: String) -> TransferRefund {
        TransferRefund {
            id,
            transfer_id,
            amount,
            status,
            failure_reason,
            created,
        }
    }
}


