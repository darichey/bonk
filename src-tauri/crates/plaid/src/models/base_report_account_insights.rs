/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.457.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// BaseReportAccountInsights : Calculated insights derived from transaction-level data.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BaseReportAccountInsights {
    /// Date of the earliest transaction in the base report for the account.
    #[serde(rename = "oldest_transaction_date", skip_serializing_if = "Option::is_none")]
    pub oldest_transaction_date: Option<String>,
    /// Date of the most recent transaction in the base report for the account.
    #[serde(rename = "most_recent_transaction_date", skip_serializing_if = "Option::is_none")]
    pub most_recent_transaction_date: Option<String>,
    /// Number of days days available in the base report for the account.
    #[serde(rename = "days_available", skip_serializing_if = "Option::is_none")]
    pub days_available: Option<i32>,
    /// Average number of days between sequential transactions
    #[serde(rename = "average_days_between_transactions", skip_serializing_if = "Option::is_none")]
    pub average_days_between_transactions: Option<f32>,
    /// Longest gap between sequential transactions
    #[serde(rename = "longest_gap_between_transactions", skip_serializing_if = "Option::is_none")]
    pub longest_gap_between_transactions: Option<Vec<crate::models::BaseReportLongestGapInsights>>,
    /// The number of debits into the account. This field will be null for non-depository accounts.
    #[serde(rename = "number_of_inflows", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub number_of_inflows: Option<Option<Vec<crate::models::BaseReportNumberFlowInsights>>>,
    /// Average amount of debit transactions into account. This field will be null for non-depository accounts. This field only takes into account USD transactions from the account.
    #[serde(rename = "average_inflow_amount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub average_inflow_amount: Option<Option<Vec<crate::models::BaseReportAverageFlowInsights>>>,
    /// The number of credit into the account. This field will be null for non-depository accounts.
    #[serde(rename = "number_of_outflows", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub number_of_outflows: Option<Option<Vec<crate::models::BaseReportNumberFlowInsights>>>,
    /// Average amount of credit transactions into account. This field will be null for non-depository accounts. This field only takes into account USD transactions from the account.
    #[serde(rename = "average_outflow_amount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub average_outflow_amount: Option<Option<Vec<crate::models::BaseReportAverageFlowInsights>>>,
    /// Number of days with no transactions
    #[serde(rename = "number_of_days_no_transactions", skip_serializing_if = "Option::is_none")]
    pub number_of_days_no_transactions: Option<i32>,
}

impl BaseReportAccountInsights {
    /// Calculated insights derived from transaction-level data.
    pub fn new() -> BaseReportAccountInsights {
        BaseReportAccountInsights {
            oldest_transaction_date: None,
            most_recent_transaction_date: None,
            days_available: None,
            average_days_between_transactions: None,
            longest_gap_between_transactions: None,
            number_of_inflows: None,
            average_inflow_amount: None,
            number_of_outflows: None,
            average_outflow_amount: None,
            number_of_days_no_transactions: None,
        }
    }
}


