/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.457.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CreditBankIncomeSource : Detailed information for the income source.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreditBankIncomeSource {
    /// A unique identifier for an income source.
    #[serde(rename = "income_source_id", skip_serializing_if = "Option::is_none")]
    pub income_source_id: Option<String>,
    /// The most common name or original description for the underlying income transactions.
    #[serde(rename = "income_description", skip_serializing_if = "Option::is_none")]
    pub income_description: Option<String>,
    #[serde(rename = "income_category", skip_serializing_if = "Option::is_none")]
    pub income_category: Option<crate::models::CreditBankIncomeCategory>,
    /// Plaid's unique identifier for the account.
    #[serde(rename = "account_id", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    /// Minimum of all dates within the specific income sources in the user's bank account for days requested by the client. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
    #[serde(rename = "start_date", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// Maximum of all dates within the specific income sources in the user’s bank account for days requested by the client. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
    #[serde(rename = "end_date", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    #[serde(rename = "pay_frequency", skip_serializing_if = "Option::is_none")]
    pub pay_frequency: Option<crate::models::CreditBankIncomePayFrequency>,
    /// Total amount of earnings in the user’s bank account for the specific income source for days requested by the client.
    #[serde(rename = "total_amount", skip_serializing_if = "Option::is_none")]
    pub total_amount: Option<f32>,
    /// Number of transactions for the income source within the start and end date.
    #[serde(rename = "transaction_count", skip_serializing_if = "Option::is_none")]
    pub transaction_count: Option<i32>,
    #[serde(rename = "historical_summary", skip_serializing_if = "Option::is_none")]
    pub historical_summary: Option<Vec<crate::models::CreditBankIncomeHistoricalSummary>>,
}

impl CreditBankIncomeSource {
    /// Detailed information for the income source.
    pub fn new() -> CreditBankIncomeSource {
        CreditBankIncomeSource {
            income_source_id: None,
            income_description: None,
            income_category: None,
            account_id: None,
            start_date: None,
            end_date: None,
            pay_frequency: None,
            total_amount: None,
            transaction_count: None,
            historical_summary: None,
        }
    }
}


