/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.482.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SandboxIncomeFireWebhookRequest : SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SandboxIncomeFireWebhookRequest {
    /// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    /// The Item ID associated with the verification.
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// The Plaid `user_id` of the User associated with this webhook, warning, or error.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    /// The URL to which the webhook should be sent.
    #[serde(rename = "webhook")]
    pub webhook: String,
    /// `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.  `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.  `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
    #[serde(rename = "verification_status", skip_serializing_if = "Option::is_none")]
    pub verification_status: Option<VerificationStatus>,
    #[serde(rename = "webhook_code")]
    pub webhook_code: crate::models::SandboxIncomeWebhookFireRequestWebhookCode,
}

impl SandboxIncomeFireWebhookRequest {
    /// SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
    pub fn new(item_id: String, webhook: String, webhook_code: crate::models::SandboxIncomeWebhookFireRequestWebhookCode) -> SandboxIncomeFireWebhookRequest {
        SandboxIncomeFireWebhookRequest {
            client_id: None,
            secret: None,
            item_id,
            user_id: None,
            webhook,
            verification_status: None,
            webhook_code,
        }
    }
}

/// `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.  `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.  `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum VerificationStatus {
    #[serde(rename = "VERIFICATION_STATUS_PROCESSING_COMPLETE")]
    ProcessingComplete,
    #[serde(rename = "VERIFICATION_STATUS_PROCESSING_FAILED")]
    ProcessingFailed,
    #[serde(rename = "VERIFICATION_STATUS_PENDING_APPROVAL")]
    PendingApproval,
}

impl Default for VerificationStatus {
    fn default() -> VerificationStatus {
        Self::ProcessingComplete
    }
}

